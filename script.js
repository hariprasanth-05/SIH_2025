document.addEventListener('DOMContentLoaded', () => {
    // Translation data
    const translations = {
        en: {
            welcome: "Welcome Back, Farmer! ЁЯСЛ",
            monitor: "Monitor your farm's health and productivity",
            digitalTwin: "Digital Twin Farm",
            realTime: "Real-time farm monitoring and analytics",
            livestockHealth: "Livestock Health: 95%",
            cropStatus: "Crop Status: Good",
            dailyScan: "Daily Scan",
            uploadPhotos: "Upload photos for AI health analysis",
            tapUpload: "ЁЯУ╖ Tap to upload photo",
            startScan: "Start Scan",
            activeAlerts: "Active Alerts",
            diseaseCheck: "Disease Check ЁЯФм",
            aiPowered: "AI-powered disease detection and diagnosis",
            uploadMedia: "Upload Media",
            uploadPhoto: "Upload Photo",
            takePhoto: "Take a clear photo of the affected animal/crop",
            choosePhoto: "Choose Photo",
            uploadVideo: "Upload Video",
            recordVideo: "Record animal behavior or symptoms",
            recordVideoBtn: "Record Video",
            voiceSymptoms: "Voice Symptoms",
            describeSymptoms: "Describe symptoms in your language",
            startRecording: "Start Recording",
            aiDiagnosis: "AI Diagnosis",
            analyzing: "Analyzing... 85%",
            possibleCause: "Possible Cause: Foot & Mouth Disease (Confidence: 85%)",
            nutritionalDef: "Possible Cause: Nutritional Deficiency (Confidence: 60%)",
            preventiveSteps: "Preventive Steps:",
            isolate: "Isolate affected animals immediately",
            disinfect: "Disinfect feeding areas",
            contactVet: "Contact veterinarian",
            monitorAnimals: "Monitor other animals closely",
            expertVerification: "Expert Verification",
            vetTyping: "Veterinarian is typing...",
            chatVet: "Chat with Veterinarian",
            askFarmers: "Ask Fellow Farmers",
            outbreakMap: "Outbreak Map ЁЯЧ║я╕П",
            realTimeOutbreak: "Real-time disease outbreak monitoring in your area",
            all: "All",
            animal: "Animal",
            crop: "Crop",
            climate: "Climate",
            highRisk: "High Risk",
            mediumRisk: "Medium Risk",
            yourFarm: "Your Farm",
            high: "High",
            medium: "Medium",
            low: "Low",
            recentAlerts: "Recent Alerts",
            highAlert: "ЁЯЪи High Alert",
            mediumAlert: "тЪая╕П Medium Alert",
            weatherAlert: "ЁЯМзя╕П Weather Alert",
            allClear: "тЬЕ All Clear",
            farmRecords: "Farm Records ЁЯУЛ",
            digitalDiary: "Digital diary for your farm activities",
            vaccination: "Vaccination",
            treatment: "Treatment",
            sanitation: "Sanitation",
            productivity: "Productivity",
            addEntry: "Add Entry",
            complete: "Complete",
            dueSoon: "Due Soon",
            ongoing: "Ongoing",
            belowTarget: "Below Target",
            exportPDF: "Export PDF",
            shareReport: "Share Report",
            hygiene: "Hygiene & Sanitation Scanner ЁЯз╜",
            hygieneAssessment: "AI-powered hygiene assessment and recommendations",
            cameraScanner: "Camera Scanner",
            scanArea: "ЁЯУ╖ Scan Your Farm Area",
            pointCamera: "Point camera at water tanks, feeding areas, or livestock shelters",
            hygieneScore: "Current Hygiene Score: 78",
            goodScore: "Good - Minor improvements needed",
            recommendations: "Recommendations",
            cleanWater: "ЁЯТз тЬФ Clean Water Tank",
            disinfectShed: "ЁЯПа тЬФ Disinfect Shed",
            pestControl: "ЁЯРЫ тЬФ Pest Control",
            goodPractices: "тЬЕ тЬФ Good Practices",
            quickTips: "Quick Tips:",
            cleanWaterDaily: "Clean water sources daily",
            removeManure: "Remove manure regularly",
            disinfectTools: "Disinfect tools after use",
            monitorPests: "Monitor for pest signs",
            buddyAI: "Farmer Buddy AI ЁЯдЦ",
            farmingAssistant: "Your intelligent farming assistant",
            voiceAssistant: "Voice Assistant",
            tapSpeak: "Tap to speak in your language",
            hello: "Hello! I'm your farming buddy. How can I help you today?",
            cowSick: "My cow seems sick, what should I do?",
            askSymptoms: "I can help! Can you describe the symptoms? Is the cow eating normally? Any visible signs of distress?",
            send: "Send",
            ivrSupport: "ЁЯУЮ IVR Support",
            smsSupport: "ЁЯТм SMS Support",
            tipDay: "ЁЯТб Tip of the Day",
            tempMonitor: "ЁЯМбя╕П Temperature Monitoring",
            tempGuide: "Check your livestock's body temperature regularly. Normal temperature for cattle is 101.5┬░F (38.6┬░C). Higher temperatures may indicate fever or heat stress.",
            setReminder: "Set Temperature Reminder",
            learnMore: "Learn More",
            relatedTopics: "Related Topics:",
            heatStress: "Heat stress prevention",
            feverTreatment: "Fever treatment guide",
            thermometer: "Thermometer usage"
        },
        ta: {
            // Your existing Tamil translations from the provided script.js (I've completed any truncated ones based on context)
            welcome: "роорпАрогрпНроЯрпБроорпН ро╡ро░рпБроХ, ро╡ро┐ро╡роЪро╛ропро┐! ЁЯСЛ",
            monitor: "роЙроЩрпНроХро│рпН рокрогрпНрогрпИропро┐ройрпН роЖро░рпЛроХрпНропродрпНродрпИропрпБроорпН роЙро▒рпНрокродрпНродро┐родрпНродро┐ро▒ройрпИропрпБроорпН роХрогрпНроХро╛рогро┐роХрпНроХро╡рпБроорпН",
            digitalTwin: "роЯро┐роЬро┐роЯрпНроЯро▓рпН роЗро░роЯрпНроЯрпИ рокрогрпНрогрпИ",
            realTime: "роиро┐роХро┤рпНроирпЗро░ рокрогрпНрогрпИ роХрогрпНроХро╛рогро┐рокрпНрокрпБ рооро▒рпНро▒рпБроорпН рокроХрпБрокрпНрокро╛ропрпНро╡рпБ",
            livestockHealth: "роХро╛ро▓рпНроироЯрпИ роЖро░рпЛроХрпНропроорпН: 95%",
            cropStatus: "рокропро┐ро░рпН роиро┐ро▓рпИ: роиро▓рпНро▓родрпБ",
            dailyScan: "родро┐ройроЪро░ро┐ ро╕рпНроХрпЗройрпН",
            uploadPhotos: "AI роЖро░рпЛроХрпНроп рокроХрпБрокрпНрокро╛ропрпНро╡рпБроХрпНроХрпБ рокрпБроХрпИрокрпНрокроЯроЩрпНроХро│рпИ рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН",
            tapUpload: "ЁЯУ╖ рокрпБроХрпИрокрпНрокроЯродрпНродрпИ рокродро┐ро╡рпЗро▒рпНро▒ роЯрпЗрокрпН роЪрпЖропрпНропро╡рпБроорпН",
            startScan: "ро╕рпНроХрпЗройрпИ родрпКроЯроЩрпНроХрпБ",
            activeAlerts: "роЪрпЖропро▓ро┐ро▓рпН роЙро│рпНро│ роОроЪрпНроЪро░ро┐роХрпНроХрпИроХро│рпН",
            diseaseCheck: "роирпЛропрпН роЪрпЛродройрпИ ЁЯФм",
            aiPowered: "AI-роЗропроЩрпНроХрпБроорпН роирпЛропрпН роХрогрпНроЯро▒ро┐родро▓рпН рооро▒рпНро▒рпБроорпН роирпЛропро▒ро┐родро▓рпН",
            uploadMedia: "роорпАроЯро┐ропро╛ро╡рпИ рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН",
            uploadPhoto: "рокрпБроХрпИрокрпНрокроЯродрпНродрпИ рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН",
            takePhoto: "рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ ро╡ро┐ро▓роЩрпНроХрпБ/рокропро┐ро░ро┐ройрпН родрпЖро│ро┐ро╡ро╛рой рокрпБроХрпИрокрпНрокроЯродрпНродрпИ роОроЯрпБроХрпНроХро╡рпБроорпН",
            choosePhoto: "рокрпБроХрпИрокрпНрокроЯродрпНродрпИ родрпЗро░рпНро╡рпБ роЪрпЖропрпНропро╡рпБроорпН",
            uploadVideo: "ро╡рпАроЯро┐ропрпЛро╡рпИ рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН",
            recordVideo: "ро╡ро┐ро▓роЩрпНроХрпБ роироЯродрпНродрпИ роЕро▓рпНро▓родрпБ роЕро▒ро┐роХрпБро▒ро┐роХро│рпИ рокродро┐ро╡рпБ роЪрпЖропрпНропро╡рпБроорпН",
            recordVideoBtn: "ро╡рпАроЯро┐ропрпЛро╡рпИ рокродро┐ро╡рпБ роЪрпЖропрпНропро╡рпБроорпН",
            voiceSymptoms: "роХрпБро░ро▓рпН роЕро▒ро┐роХрпБро▒ро┐роХро│рпН",
            describeSymptoms: "роЙроЩрпНроХро│рпН роорпКро┤ро┐ропро┐ро▓рпН роЕро▒ро┐роХрпБро▒ро┐роХро│рпИ ро╡ро┐ро╡ро░ро┐роХрпНроХро╡рпБроорпН",
            startRecording: "рокродро┐ро╡рпБ родрпКроЯроЩрпНроХро╡рпБроорпН",
            aiDiagnosis: "AI роирпЛропро▒ро┐родро▓рпН",
            analyzing: "рокроХрпБрокрпНрокро╛ропрпНро╡рпБ роЪрпЖропрпНроХро┐ро▒родрпБ... 85%",
            possibleCause: "роЪро╛родрпНродро┐ропрооро╛рой роХро╛ро░рогроорпН: роХро╛ро▓рпН & ро╡ро╛ропрпН роирпЛропрпН (роироорпНрокро┐роХрпНроХрпИ: 85%)",
            nutritionalDef: "роЪро╛родрпНродро┐ропрооро╛рой роХро╛ро░рогроорпН: роКроЯрпНроЯроЪрпНроЪродрпНродрпБ роХрпБро▒рпИрокро╛роЯрпБ (роироорпНрокро┐роХрпНроХрпИ: 60%)",
            preventiveSteps: "родроЯрпБрокрпНрокрпБ рокроЯро┐роХро│рпН:",
            isolate: "рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ ро╡ро┐ро▓роЩрпНроХрпБроХро│рпИ роЙроЯройроЯро┐ропро╛роХ родройро┐роорпИрокрпНрокроЯрпБродрпНродро╡рпБроорпН",
            disinfect: "роЙрогро╡рпБ рокроХрпБродро┐роХро│рпИ роХро┐ро░рпБрооро┐ роиро╛роЪро┐ройро┐ роЪрпЖропрпНропро╡рпБроорпН",
            contactVet: "роХро╛ро▓рпНроироЯрпИ рооро░рпБродрпНродрпБро╡ро░рпИ родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│ро╡рпБроорпН",
            monitorAnimals: "рокро┐ро▒ ро╡ро┐ро▓роЩрпНроХрпБроХро│рпИ роХрогрпНроХро╛рогро┐роХрпНроХро╡рпБроорпН",
            expertVerification: "роиро┐рокрпБрогро░рпН роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ",
            vetTyping: "роХро╛ро▓рпНроироЯрпИ рооро░рпБродрпНродрпБро╡ро░рпН роЯрпИрокрпНрокро┐роЩрпН...",
            chatVet: "роХро╛ро▓рпНроироЯрпИ рооро░рпБродрпНродрпБро╡ро░рпБроЯройрпН роЕро░роЯрпНроЯрпИ",
            askFarmers: "роЪроХ ро╡ро┐ро╡роЪро╛ропро┐роХро│ро┐роЯроорпН роХрпЗро│рпБроЩрпНроХро│рпН",
            outbreakMap: "ро╡рпЖроЯро┐рокрпНрокрпБ ро╡ро░рпИрокроЯроорпН ЁЯЧ║я╕П",
            realTimeOutbreak: "роЙроЩрпНроХро│рпН рокроХрпБродро┐ропро┐ро▓рпН роиро┐роХро┤рпНроирпЗро░ роирпЛропрпН ро╡рпЖроЯро┐рокрпНрокрпБ роХрогрпНроХро╛рогро┐рокрпНрокрпБ",
            all: "роЕройрпИродрпНродрпБ",
            animal: "ро╡ро┐ро▓роЩрпНроХрпБ",
            crop: "рокропро┐ро░рпН",
            climate: "роХро╛ро▓роиро┐ро▓рпИ",
            highRisk: "роЙропро░рпН роЖрокродрпНродрпБ",
            mediumRisk: "роироЯрпБродрпНродро░ роЖрокродрпНродрпБ",
            yourFarm: "роЙроЩрпНроХро│рпН рокрогрпНрогрпИ",
            high: "роЙропро░рпН",
            medium: "роироЯрпБродрпНродро░",
            low: "роХрпБро▒рпИро╡рпБ",
            recentAlerts: "роЪроорпАрокродрпНродро┐роп роОроЪрпНроЪро░ро┐роХрпНроХрпИроХро│рпН",
            highAlert: "ЁЯЪи роЙропро░рпН роОроЪрпНроЪро░ро┐роХрпНроХрпИ",
            mediumAlert: "тЪая╕П роироЯрпБродрпНродро░ роОроЪрпНроЪро░ро┐роХрпНроХрпИ",
            weatherAlert: "ЁЯМзя╕П ро╡ро╛ройро┐ро▓рпИ роОроЪрпНроЪро░ро┐роХрпНроХрпИ",
            allClear: "тЬЕ роЕройрпИродрпНродрпБроорпН родрпЖро│ро┐ро╡рпБ",
            farmRecords: "рокрогрпНрогрпИ рокродро┐ро╡рпБроХро│рпН ЁЯУЛ",
            digitalDiary: "роЙроЩрпНроХро│рпН рокрогрпНрогрпИ роЪрпЖропро▓рпНрокро╛роЯрпБроХро│рпБроХрпНроХро╛рой роЯро┐роЬро┐роЯрпНроЯро▓рпН роЯрпИро░ро┐",
            vaccination: "родроЯрпБрокрпНрокрпВроЪро┐",
            treatment: "роЪро┐роХро┐роЪрпНроЪрпИ",
            sanitation: "роЪрпБроХро╛родро╛ро░роорпН",
            productivity: "роЙро▒рпНрокродрпНродро┐родрпНродро┐ро▒ройрпН",
            addEntry: "роЙро│рпНро│рпАроЯрпНроЯрпИ роЪрпЗро░рпНроХрпНроХро╡рпБроорпН",
            complete: "роорпБроЯро┐роирпНродродрпБ",
            dueSoon: "ро╡ро┐ро░рпИро╡ро┐ро▓рпН роХро╛ро▓ро╛ро╡родро┐",
            ongoing: "роироЯроирпНродрпБ роХрпКрогрпНроЯро┐ро░рпБроХрпНроХро┐ро▒родрпБ",
            belowTarget: "роЗро▓роХрпНроХрпБроХрпНроХрпБ роХрпАро┤рпЗ",
            exportPDF: "PDF роПро▒рпНро▒рпБроородро┐",
            shareReport: "роЕро▒ро┐роХрпНроХрпИропрпИ рокроХро┐ро░ро╡рпБроорпН",
            hygiene: "роЪрпБроХро╛родро╛ро░роорпН & роЪрпБродрпНродро┐роХро░ро┐рокрпНрокрпБ ро╕рпНроХрпЗройро░рпН ЁЯз╜",
            hygieneAssessment: "AI-роЗропроЩрпНроХрпБроорпН роЪрпБроХро╛родро╛ро░ роородро┐рокрпНрокрпАроЯрпБ рооро▒рпНро▒рпБроорпН рокро░ро┐роирпНродрпБро░рпИроХро│рпН",
            cameraScanner: "роХрпЗрооро░ро╛ ро╕рпНроХрпЗройро░рпН",
            scanArea: "ЁЯУ╖ роЙроЩрпНроХро│рпН рокрогрпНрогрпИ рокроХрпБродро┐ропрпИ ро╕рпНроХрпЗройрпН роЪрпЖропрпНропро╡рпБроорпН",
            pointCamera: "роирпАро░рпН родрпКроЯрпНроЯро┐роХро│рпН, роЙрогро╡рпБ рокроХрпБродро┐роХро│рпН роЕро▓рпНро▓родрпБ роХро╛ро▓рпНроироЯрпИ родроЩрпНроХрпБрооро┐роЯроЩрпНроХро│ро┐ро▓рпН роХрпЗрооро░ро╛ро╡рпИ роЪрпБроЯрпНроЯро┐роХрпНроХро╛роЯрпНроЯро╡рпБроорпН",
            hygieneScore: "родро▒рпНрокрпЛродрпИроп роЪрпБроХро╛родро╛ро░ роородро┐рокрпНрокрпЖрогрпН: 78",
            goodScore: "роиро▓рпНро▓родрпБ - роЪро┐ро▒ро┐роп роорпЗроорпНрокро╛роЯрпБроХро│рпН родрпЗро╡рпИ",
            recommendations: "рокро░ро┐роирпНродрпБро░рпИроХро│рпН",
            cleanWater: "ЁЯТз тЬФ роирпАро░рпН родрпКроЯрпНроЯро┐ропрпИ роЪрпБродрпНродроорпН роЪрпЖропрпНропро╡рпБроорпН",
            disinfectShed: "ЁЯПа тЬФ роХрпКроЯрпНроЯроХрпИропрпИ роХро┐ро░рпБрооро┐ роиро╛роЪро┐ройро┐ роЪрпЖропрпНропро╡рпБроорпН",
            pestControl: "ЁЯРЫ тЬФ рокрпВроЪрпНроЪро┐ роХроЯрпНроЯрпБрокрпНрокро╛роЯрпБ",
            goodPractices: "тЬЕ тЬФ роиро▓рпНро▓ роироЯрпИроорпБро▒рпИроХро│рпН",
            quickTips: "ро╡ро┐ро░рпИро╡рпБ роЙродро╡ро┐роХрпНроХрпБро▒ро┐рокрпНрокрпБроХро│рпН:",
            cleanWaterDaily: "родро┐ройроЪро░ро┐ роирпАро░рпН роЖродро╛ро░роЩрпНроХро│рпИ роЪрпБродрпНродроорпН роЪрпЖропрпНропро╡рпБроорпН",
            removeManure: "роЪро╛рогродрпНродрпИ родро╡ро▒ро╛рооро▓рпН роЕроХро▒рпНро▒ро╡рпБроорпН",
            disinfectTools: "рокропройрпНрокроЯрпБродрпНродро┐роп рокро┐ро▒роХрпБ роХро░рпБро╡ро┐роХро│рпИ роХро┐ро░рпБрооро┐ роиро╛роЪро┐ройро┐ роЪрпЖропрпНропро╡рпБроорпН",
            monitorPests: "рокрпВроЪрпНроЪро┐ роЕро▒ро┐роХрпБро▒ро┐роХро│рпИ роХрогрпНроХро╛рогро┐роХрпНроХро╡рпБроорпН",
            buddyAI: "ро╡ро┐ро╡роЪро╛ропро┐ роирогрпНрокро░рпН AI ЁЯдЦ",
            farmingAssistant: "роЙроЩрпНроХро│рпН роЕро▒ро┐ро╡ро╛ро░рпНроирпНрод ро╡ро┐ро╡роЪро╛роп роЙродро╡ро┐ропро╛ро│ро░рпН",
            voiceAssistant: "роХрпБро░ро▓рпН роЙродро╡ро┐ропро╛ро│ро░рпН",
            tapSpeak: "роЙроЩрпНроХро│рпН роорпКро┤ро┐ропро┐ро▓рпН рокрпЗроЪ роЯрпЗрокрпН роЪрпЖропрпНропро╡рпБроорпН",
            hello: "ро╡рогроХрпНроХроорпН! роиро╛ройрпН роЙроЩрпНроХро│рпН ро╡ро┐ро╡роЪро╛роп роирогрпНрокро░рпН. роЗройрпНро▒рпБ роЙроЩрпНроХро│рпБроХрпНроХрпБ роОрокрпНрокроЯро┐ роЙродро╡ро▓ро╛роорпН?",
            cowSick: "роОройрпН рокроЪрпБ роирпЛропрпНро╡ро╛ропрпНрокрпНрокроЯрпНроЯродро╛роХ родрпЖро░ро┐роХро┐ро▒родрпБ, роОройрпНрой роЪрпЖропрпНроп ро╡рпЗрогрпНроЯрпБроорпН?",
            askSymptoms: "роиро╛ройрпН роЙродро╡ро▓ро╛роорпН! роЕро▒ро┐роХрпБро▒ро┐роХро│рпИ ро╡ро┐ро╡ро░ро┐роХрпНроХ роорпБроЯро┐ропрпБрооро╛? рокроЪрпБ роЪро╛родро╛ро░рогрооро╛роХ роЪро╛рокрпНрокро┐роЯрпБроХро┐ро▒родро╛? роОроирпНродро╡ро┐род родрпБройрпНрок роЕро▒ро┐роХрпБро▒ро┐роХро│рпБроорпН родрпЖро░ро┐роХро┐ро▒родро╛?",
            send: "роЕройрпБрокрпНрокрпБ",
            ivrSupport: "ЁЯУЮ IVR роЖродро░ро╡рпБ",
            smsSupport: "ЁЯТм SMS роЖродро░ро╡рпБ",
            tipDay: "ЁЯТб роиро╛ро│ро┐ройрпН роЙродро╡ро┐роХрпНроХрпБро▒ро┐рокрпНрокрпБ",
            tempMonitor: "ЁЯМбя╕П ро╡рпЖрокрпНрокроиро┐ро▓рпИ роХрогрпНроХро╛рогро┐рокрпНрокрпБ",
            tempGuide: "роЙроЩрпНроХро│рпН роХро╛ро▓рпНроироЯрпИропро┐ройрпН роЙроЯро▓рпН ро╡рпЖрокрпНрокроиро┐ро▓рпИропрпИ родро╡ро▒ро╛рооро▓рпН роЪрпЛродро┐роХрпНроХро╡рпБроорпН. роХро╛ро▓рпНроироЯрпИроХро│рпБроХрпНроХро╛рой роЪро╛родро╛ро░рог ро╡рпЖрокрпНрокроиро┐ро▓рпИ 101.5┬░F (38.6┬░C). роЙропро░рпН ро╡рпЖрокрпНрокроиро┐ро▓рпИ роХро╛ропрпНроЪрпНроЪро▓рпН роЕро▓рпНро▓родрпБ ро╡рпЖрокрпНрок роЕро┤рпБродрпНродродрпНродрпИ роХрпБро▒ро┐роХрпНроХро▓ро╛роорпН.",
            setReminder: "ро╡рпЖрокрпНрокроиро┐ро▓рпИ роиро┐ройрпИро╡рпВроЯрпНроЯро▓рпИ роЕроорпИроХрпНроХро╡рпБроорпН",
            learnMore: "роорпЗро▓рпБроорпН роЕро▒ро┐ропро╡рпБроорпН",
            relatedTopics: "родрпКроЯро░рпНрокрпБроЯрпИроп родро▓рпИрокрпНрокрпБроХро│рпН:",
            heatStress: "ро╡рпЖрокрпНрок роЕро┤рпБродрпНрод родроЯрпБрокрпНрокрпБ",
            feverTreatment: "роХро╛ропрпНроЪрпНроЪро▓рпН роЪро┐роХро┐роЪрпНроЪрпИ ро╡ро┤ро┐роХро╛роЯрпНроЯро┐",
            thermometer: "родрпЖро░рпНрооро╛роорпАроЯрпНроЯро░рпН рокропройрпНрокро╛роЯрпБ"
        },
        te: {
            welcome: "р░др░┐р░░р░┐р░Чр░┐ р░╕р▒Нр░╡р░╛р░Чр░др░В, р░░р▒Ир░др▒Б! ЁЯСЛ",
            monitor: "р░ор▒А р░лр░╛р░ор▒Н р░Жр░░р▒Лр░Чр▒Нр░пр░В р░ор░░р░┐р░пр▒Б р░Йр░др▒Нр░кр░╛р░жр░Хр░др░ир▒Б р░ор░╛р░ир░┐р░Яр░░р▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            digitalTwin: "р░бр░┐р░Ьр░┐р░Яр░▓р▒Н р░Яр▒Нр░╡р░┐р░ир▒Н р░лр░╛р░ор▒Н",
            realTime: "р░░р░┐р░пр░▓р▒Н-р░Яр▒Ир░ор▒Н р░лр░╛р░ор▒Н р░ор░╛р░ир░┐р░Яр░░р░┐р░Вр░Чр▒Н р░ор░░р░┐р░пр▒Б р░Ер░ир░▓р░┐р░Яр░┐р░Хр▒Нр░╕р▒Н",
            livestockHealth: "р░кр░╢р▒Бр░╡р▒Бр░▓ р░Жр░░р▒Лр░Чр▒Нр░пр░В: 95%",
            cropStatus: "р░кр░Вр░Я р░╕р▒Нр░ер░┐р░др░┐: р░ор░Вр░Ър░┐",
            dailyScan: "р░░р▒Лр░Ьр▒Бр░╡р░╛р░░р▒А р░╕р▒Нр░Хр░╛р░ир▒Н",
            uploadPhotos: "AI р░Жр░░р▒Лр░Чр▒Нр░п р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░г р░Хр▒Лр░╕р░В р░лр▒Лр░Яр▒Лр░▓р░ир▒Б р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            tapUpload: "ЁЯУ╖ р░лр▒Лр░Яр▒Л р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░бр░╛р░ир░┐р░Хр░┐ р░Яр▒Нр░пр░╛р░кр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            startScan: "р░╕р▒Нр░Хр░╛р░ир▒Н р░кр▒Нр░░р░╛р░░р░Вр░нр░┐р░Вр░Ър░Вр░бр░┐",
            activeAlerts: "р░пр░╛р░Хр▒Нр░Яр░┐р░╡р▒Н р░Ер░▓р░░р▒Нр░Яр▒Нр░╕р▒Н",
            diseaseCheck: "р░бр░┐р░╕р▒Ар░Ьр▒Н р░Ър▒Жр░Хр▒Н ЁЯФм",
            aiPowered: "AI-р░кр░╡р░░р▒Нр░бр▒Н р░бр░┐р░╕р▒Ар░Ьр▒Н р░бр░┐р░Яр▒Жр░Хр▒Нр░╖р░ир▒Н р░ор░░р░┐р░пр▒Б р░бр░пр░╛р░Чр▒Нр░ир▒Лр░╕р░┐р░╕р▒Н",
            uploadMedia: "р░ор▒Ар░бр░┐р░пр░╛р░ир▒Б р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            uploadPhoto: "р░лр▒Лр░Яр▒Л р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            takePhoto: "р░кр▒Нр░░р░нр░╛р░╡р░┐р░д р░Ьр░Вр░др▒Бр░╡р▒Б/р░кр░Вр░Я р░пр▒Кр░Хр▒Нр░Х р░╕р▒Нр░кр░╖р▒Нр░Яр░ор▒Ир░и р░лр▒Лр░Яр▒Л р░др▒Ар░пр░Вр░бр░┐",
            choosePhoto: "р░лр▒Лр░Яр▒Л р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐",
            uploadVideo: "р░╡р▒Ар░бр░┐р░пр▒Л р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            recordVideo: "р░Ьр░Вр░др▒Бр░╡р▒Б р░кр▒Нр░░р░╡р░░р▒Нр░др░и р░▓р▒Зр░жр░╛ р░▓р░Хр▒Нр░╖р░гр░╛р░▓р░ир▒Б р░░р░┐р░Хр░╛р░░р▒Нр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            recordVideoBtn: "р░╡р▒Ар░бр░┐р░пр▒Л р░░р░┐р░Хр░╛р░░р▒Нр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            voiceSymptoms: "р░╡р░╛р░пр░┐р░╕р▒Н р░▓р░Хр▒Нр░╖р░гр░╛р░▓р▒Б",
            describeSymptoms: "р░ор▒А р░нр░╛р░╖р░▓р▒Л р░▓р░Хр▒Нр░╖р░гр░╛р░▓р░ир▒Б р░╡р░┐р░╡р░░р░┐р░Вр░Ър░Вр░бр░┐",
            startRecording: "р░░р░┐р░Хр░╛р░░р▒Нр░бр░┐р░Вр░Чр▒Н р░кр▒Нр░░р░╛р░░р░Вр░нр░┐р░Вр░Ър░Вр░бр░┐",
            aiDiagnosis: "AI р░бр░пр░╛р░Чр▒Нр░ир▒Лр░╕р░┐р░╕р▒Н",
            analyzing: "р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░┐р░╕р▒Нр░др▒Бр░ир▒Нр░ир░╛р░░р▒Б... 85%",
            possibleCause: "р░╕р░Вр░нр░╛р░╡р▒Нр░п р░Хр░╛р░░р░гр░В: р░лр▒Бр░Яр▒Н & р░ор▒Мр░др▒Н р░бр░┐р░╕р▒Ар░Ьр▒Н (р░Хр░╛р░ир▒Нр░лр░┐р░бр▒Жр░ир▒Нр░╕р▒Н: 85%)",
            nutritionalDef: "р░╕р░Вр░нр░╛р░╡р▒Нр░п р░Хр░╛р░░р░гр░В: р░кр▒Лр░╖р░Хр░╛р░╣р░╛р░░ р░▓р▒Лр░кр░В (р░Хр░╛р░ир▒Нр░лр░┐р░бр▒Жр░ир▒Нр░╕р▒Н: 60%)",
            preventiveSteps: "р░ор▒Бр░Вр░жр░╕р▒Нр░др▒Б р░Ър░░р▒Нр░пр░▓р▒Б:",
            isolate: "р░кр▒Нр░░р░нр░╛р░╡р░┐р░д р░Ьр░Вр░др▒Бр░╡р▒Бр░▓р░ир▒Б р░др░Хр▒Нр░╖р░гр░ор▒З р░Рр░╕р▒Лр░▓р▒Зр░Яр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            disinfect: "р░лр▒Ар░бр░┐р░Вр░Чр▒Н р░Пр░░р░┐р░пр░╛р░▓р░ир▒Б р░бр░┐р░╕р░┐р░ир▒Нр░лр▒Жр░Хр▒Нр░Яр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            contactVet: "р░╡р▒Жр░Яр░░р▒Нр░ир░░р▒Ар░ир░┐ р░╕р░Вр░кр▒Нр░░р░жр░┐р░Вр░Ър░Вр░бр░┐",
            monitorAnimals: "р░Зр░др░░ р░Ьр░Вр░др▒Бр░╡р▒Бр░▓р░ир▒Б р░жр░Чр▒Нр░Чр░░р░Чр░╛ р░ор░╛р░ир░┐р░Яр░░р▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            expertVerification: "р░ир░┐р░кр▒Бр░гр▒Бр░▓ р░зр▒Гр░╡р▒Ар░Хр░░р░г",
            vetTyping: "р░╡р▒Жр░Яр░░р▒Нр░ир░░р▒А р░Яр▒Ир░кр░┐р░Вр░Чр▒Н...",
            chatVet: "р░╡р▒Жр░Яр░░р▒Нр░ир░░р▒Ар░др▒Л р░Ър░╛р░Яр▒Н",
            askFarmers: "р░╕р░╣ р░░р▒Ир░др▒Бр░▓р░ир▒Б р░Ер░бр░Чр░Вр░бр░┐",
            outbreakMap: "р░Ер░╡р▒Бр░Яр▒НтАМр░мр▒Нр░░р▒Зр░Хр▒Н р░ор▒Нр░пр░╛р░кр▒Н ЁЯЧ║я╕П",
            realTimeOutbreak: "р░ор▒А р░кр▒Нр░░р░╛р░Вр░др░Вр░▓р▒Л р░░р░┐р░пр░▓р▒Н-р░Яр▒Ир░ор▒Н р░бр░┐р░╕р▒Ар░Ьр▒Н р░Ер░╡р▒Бр░Яр▒НтАМр░мр▒Нр░░р▒Зр░Хр▒Н р░ор░╛р░ир░┐р░Яр░░р░┐р░Вр░Чр▒Н",
            all: "р░Ер░ир▒Нр░ир░┐",
            animal: "р░Ьр░Вр░др▒Бр░╡р▒Б",
            crop: "р░кр░Вр░Я",
            climate: "р░Хр▒Нр░▓р▒Ир░ор▒Зр░Яр▒Н",
            highRisk: "р░╣р▒И р░░р░┐р░╕р▒Нр░Хр▒Н",
            mediumRisk: "р░ор▒Ар░бр░┐р░пр░В р░░р░┐р░╕р▒Нр░Хр▒Н",
            yourFarm: "р░ор▒А р░лр░╛р░ор▒Н",
            high: "р░╣р▒И",
            medium: "р░ор▒Ар░бр░┐р░пр░В",
            low: "р░▓р▒Л",
            recentAlerts: "р░Зр░Яр▒Ар░╡р░▓р░┐ р░Ер░▓р░░р▒Нр░Яр▒Нр░╕р▒Н",
            highAlert: "ЁЯЪи р░╣р▒И р░Ер░▓р░░р▒Нр░Яр▒Н",
            mediumAlert: "тЪая╕П р░ор▒Ар░бр░┐р░пр░В р░Ер░▓р░░р▒Нр░Яр▒Н",
            weatherAlert: "ЁЯМзя╕П р░╡р▒Жр░жр░░р▒Н р░Ер░▓р░░р▒Нр░Яр▒Н",
            allClear: "тЬЕ р░Ер░ир▒Нр░ир░┐ р░Хр▒Нр░▓р░┐р░пр░░р▒Н",
            farmRecords: "р░лр░╛р░ор▒Н р░░р░┐р░Хр░╛р░░р▒Нр░бр▒Бр░▓р▒Б ЁЯУЛ",
            digitalDiary: "р░ор▒А р░лр░╛р░ор▒Н р░пр░╛р░Хр▒Нр░Яр░┐р░╡р░┐р░Яр▒Ар░▓р░Хр▒Б р░бр░┐р░Ьр░┐р░Яр░▓р▒Н р░бр▒Ир░░р▒А",
            vaccination: "р░╡р▒Нр░пр░╛р░Хр▒Нр░╕р░┐р░ир▒Зр░╖р░ир▒Н",
            treatment: "р░Яр▒Нр░░р▒Ар░Яр▒Нр░ор▒Жр░Вр░Яр▒Н",
            sanitation: "р░╕р░╛р░ир░┐р░Яр▒Зр░╖р░ир▒Н",
            productivity: "р░кр▒Нр░░р▒Кр░бр░Хр▒Нр░Яр░┐р░╡р░┐р░Яр▒А",
            addEntry: "р░Ор░Вр░Яр▒Нр░░р▒А р░Ьр▒Лр░бр░┐р░Вр░Ър░Вр░бр░┐",
            complete: "р░кр▒Вр░░р▒Нр░др░┐",
            dueSoon: "р░др▒Нр░╡р░░р░▓р▒Л р░бр▒Нр░пр▒В",
            ongoing: "р░Жр░ир▒НтАМр░Чр▒Лр░пр░┐р░Вр░Чр▒Н",
            belowTarget: "р░Яр░╛р░░р▒Нр░Чр▒Жр░Яр▒Н р░Хр░Вр░Яр▒З р░др░Хр▒Нр░Хр▒Бр░╡",
            exportPDF: "PDF р░Ор░Хр▒Нр░╕р▒НтАМр░кр▒Лр░░р▒Нр░Яр▒Н",
            shareReport: "р░░р░┐р░кр▒Лр░░р▒Нр░Яр▒Н р░╖р▒Зр░░р▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            hygiene: "р░╣р▒Ир░Ьр▒Ар░ир▒Н & р░╕р░╛р░ир░┐р░Яр▒Зр░╖р░ир▒Н р░╕р▒Нр░Хр░╛р░ир░░р▒Н ЁЯз╜",
            hygieneAssessment: "AI-р░кр░╡р░░р▒Нр░бр▒Н р░╣р▒Ир░Ьр▒Ар░ир▒Н р░Ер░╕р▒Жр░╕р▒НтАМр░ор▒Жр░Вр░Яр▒Н р░ор░░р░┐р░пр▒Б р░░р░┐р░Хр░ор▒Жр░Вр░бр▒Зр░╖р░ир▒Нр░▓р▒Б",
            cameraScanner: "р░Хр▒Жр░ор▒Жр░░р░╛ р░╕р▒Нр░Хр░╛р░ир░░р▒Н",
            scanArea: "ЁЯУ╖ р░ор▒А р░лр░╛р░ор▒Н р░Пр░░р░┐р░пр░╛р░ир▒Б р░╕р▒Нр░Хр░╛р░ир▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            pointCamera: "р░╡р░╛р░Яр░░р▒Н р░Яр▒Нр░пр░╛р░Вр░Хр▒Бр░▓р▒Б, р░лр▒Ар░бр░┐р░Вр░Чр▒Н р░Пр░░р░┐р░пр░╛р░▓р▒Б р░▓р▒Зр░жр░╛ р░кр░╢р▒Бр░╡р▒Бр░▓ р░╖р▒Жр░▓р▒Нр░Яр░░р▒Нр░▓ р░╡р░жр▒Нр░ж р░Хр▒Жр░ор▒Жр░░р░╛р░ир▒Б р░кр░╛р░пр░┐р░Вр░Яр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            hygieneScore: "р░Хр░░р▒Жр░Вр░Яр▒Н р░╣р▒Ир░Ьр▒Ар░ир▒Н р░╕р▒Нр░Хр▒Лр░░р▒Н: 78",
            goodScore: "р░ор░Вр░Ър░┐ - р░Ър░┐р░ир▒Нр░и р░ор▒Жр░░р▒Бр░Чр▒Бр░жр░▓р░▓р▒Б р░Ер░╡р░╕р░░р░В",
            recommendations: "р░░р░┐р░Хр░ор▒Жр░Вр░бр▒Зр░╖р░ир▒Нр░▓р▒Б",
            cleanWater: "ЁЯТз тЬФ р░Хр▒Нр░▓р▒Ар░ир▒Н р░╡р░╛р░Яр░░р▒Н р░Яр▒Нр░пр░╛р░Вр░Хр▒Н",
            disinfectShed: "ЁЯПа тЬФ р░бр░┐р░╕р░┐р░ир▒Нр░лр▒Жр░Хр▒Нр░Яр▒Н р░╖р▒Жр░бр▒Н",
            pestControl: "ЁЯРЫ тЬФ р░кр▒Жр░╕р▒Нр░Яр▒Н р░Хр░Вр░Яр▒Нр░░р▒Лр░▓р▒Н",
            goodPractices: "тЬЕ тЬФ р░ор░Вр░Ър░┐ р░кр▒Нр░░р░╛р░Хр▒Нр░Яр▒Ар░╕р▒Бр░▓р▒Б",
            quickTips: "р░Хр▒Нр░╡р░┐р░Хр▒Н р░Яр░┐р░кр▒Нр░╕р▒Н:",
            cleanWaterDaily: "р░░р▒Лр░Ьр▒Бр░╡р░╛р░░р▒А р░╡р░╛р░Яр░░р▒Н р░╕р▒Лр░░р▒Нр░╕р▒Бр░▓р░ир▒Б р░Хр▒Нр░▓р▒Ар░ир▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            removeManure: "р░ор░╛р░ир▒Нр░пр▒Вр░░р▒НтАМр░ир▒Б р░░р▒Жр░Чр▒Нр░пр▒Бр░▓р░░р▒НтАМр░Чр░╛ р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐",
            disinfectTools: "р░пр▒Вр░Ьр▒Н р░др░░р▒Нр░╡р░╛р░д р░Яр▒Вр░▓р▒Нр░╕р▒НтАМр░ир▒Б р░бр░┐р░╕р░┐р░ир▒Нр░лр▒Жр░Хр▒Нр░Яр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            monitorPests: "р░кр▒Жр░╕р▒Нр░Яр▒Н р░╕р▒Ир░ир▒НтАМр░▓р░ир▒Б р░ор░╛р░ир░┐р░Яр░░р▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            buddyAI: "р░лр░╛р░░р▒Нр░ор░░р▒Н р░мр░бр▒Нр░бр▒А AI ЁЯдЦ",
            farmingAssistant: "р░ор▒А р░Зр░Вр░Яр▒Жр░▓р░┐р░Ьр▒Жр░Вр░Яр▒Н р░лр░╛р░░р▒Нр░ор░┐р░Вр░Чр▒Н р░Ер░╕р░┐р░╕р▒Нр░Яр▒Жр░Вр░Яр▒Н",
            voiceAssistant: "р░╡р░╛р░пр░┐р░╕р▒Н р░Ер░╕р░┐р░╕р▒Нр░Яр▒Жр░Вр░Яр▒Н",
            tapSpeak: "р░ор▒А р░нр░╛р░╖р░▓р▒Л р░ор░╛р░Яр▒Нр░▓р░╛р░бр░Яр░╛р░ир░┐р░Хр░┐ р░Яр▒Нр░пр░╛р░кр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            hello: "р░╣р░▓р▒Л! р░ир▒Зр░ир▒Б р░ор▒А р░лр░╛р░░р▒Нр░ор░┐р░Вр░Чр▒Н р░мр░бр▒Нр░бр▒А. р░Ир░░р▒Лр░Ьр▒Б р░ор▒Ар░Хр▒Б р░Ор░▓р░╛ р░╕р░╣р░╛р░пр░В р░Ър▒Зр░пр░Чр░▓р░ир▒Б?",
            cowSick: "р░ир░╛ р░Жр░╡р▒Б р░Ер░ир░╛р░░р▒Лр░Чр▒Нр░пр░Вр░Чр░╛ р░Хр░ир░┐р░кр░┐р░╕р▒Нр░др▒Лр░Вр░жр░┐, р░Пр░В р░Ър▒Зр░пр░╛р░▓р░┐?",
            askSymptoms: "р░ир▒Зр░ир▒Б р░╕р░╣р░╛р░пр░В р░Ър▒Зр░пр░Чр░▓р░ир▒Б! р░▓р░Хр▒Нр░╖р░гр░╛р░▓р░ир▒Б р░╡р░┐р░╡р░░р░┐р░Вр░Ър░Чр░▓р░░р░╛? р░Жр░╡р▒Б р░╕р░╛р░зр░╛р░░р░гр░Вр░Чр░╛ р░др░┐р░Вр░Яр▒Лр░Вр░жр░╛? р░Пр░жр▒Ир░ир░╛ р░бр░┐р░╕р▒Нр░Яр▒Нр░░р▒Жр░╕р▒Н р░╕р▒Ир░ир▒НтАМр░▓р▒Б р░Хр░ир░┐р░кр░┐р░╕р▒Нр░др▒Бр░ир▒Нр░ир░╛р░пр░╛?",
            send: "р░кр░Вр░кр░Вр░бр░┐",
            ivrSupport: "ЁЯУЮ IVR р░╕р░кр▒Лр░░р▒Нр░Яр▒Н",
            smsSupport: "ЁЯТм SMS р░╕р░кр▒Лр░░р▒Нр░Яр▒Н",
            tipDay: "ЁЯТб р░бр▒З р░Жр░лр▒Н р░Яр░┐р░кр▒Н",
            tempMonitor: "ЁЯМбя╕П р░Яр▒Жр░Вр░кр░░р▒Зр░Ър░░р▒Н р░ор░╛р░ир░┐р░Яр░░р░┐р░Вр░Чр▒Н",
            tempGuide: "р░ор▒А р░кр░╢р▒Бр░╡р▒Бр░▓ р░мр░╛р░бр▒А р░Яр▒Жр░Вр░кр░░р▒Зр░Ър░░р▒НтАМр░ир▒Б р░░р▒Жр░Чр▒Нр░пр▒Бр░▓р░░р▒НтАМр░Чр░╛ р░Ър▒Жр░Хр▒Н р░Ър▒Зр░пр░Вр░бр░┐. р░кр░╢р▒Бр░╡р▒Бр░▓р░Хр▒Б р░ир░╛р░░р▒Нр░ор░▓р▒Н р░Яр▒Жр░Вр░кр░░р▒Зр░Ър░░р▒Н 101.5┬░F (38.6┬░C). р░╣р▒И р░Яр▒Жр░Вр░кр░░р▒Зр░Ър░░р▒Нр░▓р▒Б р░лр▒Ар░╡р░░р▒Н р░▓р▒Зр░жр░╛ р░╣р▒Ар░Яр▒Н р░╕р▒Нр░Яр▒Нр░░р▒Жр░╕р▒НтАМр░ир▒Б р░╕р▒Вр░Ър░┐р░╕р▒Нр░др░╛р░пр░┐.",
            setReminder: "р░Яр▒Жр░Вр░кр░░р▒Зр░Ър░░р▒Н р░░р░┐р░ор▒Ир░Вр░бр░░р▒Н р░╕р▒Жр░Яр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
            learnMore: "р░ор░░р░┐р░ир▒Нр░ир░┐ р░др▒Жр░▓р▒Бр░╕р▒Бр░Хр▒Лр░Вр░бр░┐",
            relatedTopics: "р░╕р░Вр░мр░Вр░зр░┐р░д р░Яр░╛р░кр░┐р░Хр▒Нр░╕р▒Н:",
            heatStress: "р░╣р▒Ар░Яр▒Н р░╕р▒Нр░Яр▒Нр░░р▒Жр░╕р▒Н р░кр▒Нр░░р░┐р░╡р▒Жр░ир▒Нр░╖р░ир▒Н",
            feverTreatment: "р░лр▒Ар░╡р░░р▒Н р░Яр▒Нр░░р▒Ар░Яр▒Нр░ор▒Жр░Вр░Яр▒Н р░Чр▒Ир░бр▒Н",
            thermometer: "р░ер░░р▒Нр░ор░╛р░ор▒Ар░Яр░░р▒Н р░пр▒Вр░╕р▒Зр░Ьр▒Н"
        },
        ml: {
            welcome: "р┤др┤┐р┤░р┤┐р┤Ър╡Нр┤Ър╡Б р┤╡р┤░р┤╡р╡Н, р┤Хр╡╝р┤╖р┤Х! ЁЯСЛ",
            monitor: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤лр┤╛р┤ор┤┐р┤ир╡Нр┤▒р╡Ж р┤Жр┤░р╡Лр┤Чр╡Нр┤пр┤╡р╡Бр┤В р┤Йр╡╜р┤кр╡Нр┤кр┤╛р┤жр┤ир┤Хр╡Нр┤╖р┤ор┤др┤пр╡Бр┤В р┤ор╡Лр┤гр┤┐р┤▒р╡Нр┤▒р╡╝ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            digitalTwin: "р┤бр┤┐р┤Ьр┤┐р┤▒р╡Нр┤▒р╡╜ р┤Яр╡Нр┤╡р┤┐р╡╗ р┤лр┤╛р┤В",
            realTime: "р┤▒р┤┐р┤пр╡╜-р┤Яр╡Ир┤В р┤лр┤╛р┤В р┤ор╡Лр┤гр┤┐р┤▒р╡Нр┤▒р┤▒р┤┐р┤Щр╡Нр┤Щр╡Бр┤В р┤Ер┤ир┤▓р┤┐р┤▒р╡Нр┤▒р┤┐р┤Хр╡Нр┤╕р╡Бр┤В",
            livestockHealth: "р┤ор╡Гр┤Чр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Жр┤░р╡Лр┤Чр╡Нр┤пр┤В: 95%",
            cropStatus: "р┤╡р┤┐р┤│ р┤ир┤┐р┤▓: р┤ир┤▓р╡Нр┤▓р┤др╡Н",
            dailyScan: "р┤жр╡Ир┤ир┤Вр┤жр┤┐р┤и р┤╕р╡Нр┤Хр┤╛р╡╗",
            uploadPhotos: "AI р┤Жр┤░р╡Лр┤Чр╡Нр┤п р┤╡р┤┐р┤╢р┤Хр┤▓р┤ир┤др╡Нр┤др┤┐р┤ир┤╛р┤пр┤┐ р┤лр╡Лр┤Яр╡Нр┤Яр╡Лр┤Хр╡╛ р┤Ер┤кр╡НтАМр┤▓р╡Лр┤бр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            tapUpload: "ЁЯУ╖ р┤лр╡Лр┤Яр╡Нр┤Яр╡Л р┤Ер┤кр╡НтАМр┤▓р╡Лр┤бр╡Н р┤Ър╡Жр┤пр╡Нр┤пр┤╛р╡╗ р┤Яр┤╛р┤кр╡Нр┤кр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            startScan: "р┤╕р╡Нр┤Хр┤╛р╡╗ р┤Жр┤░р┤Вр┤нр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х",
            activeAlerts: "р┤╕р┤Ьр╡Ар┤╡ р┤Ер┤▓р╡Зр╡╝р┤Яр╡Нр┤Яр╡Бр┤Хр╡╛",
            diseaseCheck: "р┤░р╡Лр┤Ч р┤кр┤░р┤┐р┤╢р╡Лр┤зр┤и ЁЯФм",
            aiPowered: "AI-р┤кр┤╡р╡╝р┤бр╡Н р┤░р╡Лр┤Ч р┤Хр┤гр╡Нр┤Яр╡Жр┤др╡Нр┤др┤▓р╡Бр┤В р┤бр┤пр┤Чр╡Нр┤ир╡Лр┤╕р┤┐р┤╕р╡Бр┤В",
            uploadMedia: "р┤ор╡Ар┤бр┤┐р┤п р┤Ер┤кр╡НтАМр┤▓р╡Лр┤бр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            uploadPhoto: "р┤лр╡Лр┤Яр╡Нр┤Яр╡Л р┤Ер┤кр╡НтАМр┤▓р╡Лр┤бр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            takePhoto: "р┤мр┤╛р┤зр┤┐р┤Ър╡Нр┤Ъ р┤ор╡Гр┤Чр┤В/р┤╡р┤┐р┤│р┤пр╡Бр┤Яр╡Ж р┤╡р╡Нр┤пр┤Хр╡Нр┤др┤ор┤╛р┤п р┤лр╡Лр┤Яр╡Нр┤Яр╡Л р┤Ор┤Яр╡Бр┤Хр╡Нр┤Хр╡Бр┤Х",
            choosePhoto: "р┤лр╡Лр┤Яр╡Нр┤Яр╡Л р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤Хр╡Нр┤Хр╡Бр┤Х",
            uploadVideo: "р┤╡р╡Ар┤бр┤┐р┤пр╡Л р┤Ер┤кр╡НтАМр┤▓р╡Лр┤бр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            recordVideo: "р┤ор╡Гр┤Ч р┤кр╡Жр┤░р╡Бр┤ор┤╛р┤▒р╡Нр┤▒р┤ор╡Л р┤▓р┤Хр╡Нр┤╖р┤гр┤Щр╡Нр┤Щр┤│р╡Л р┤▒р╡Жр┤Хр╡Нр┤Хр╡Лр╡╝р┤бр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            recordVideoBtn: "р┤╡р╡Ар┤бр┤┐р┤пр╡Л р┤▒р╡Жр┤Хр╡Нр┤Хр╡Лр╡╝р┤бр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            voiceSymptoms: "р┤╡р╡Лр┤пр╡НтАМр┤╕р╡Н р┤▓р┤Хр╡Нр┤╖р┤гр┤Щр╡Нр┤Щр╡╛",
            describeSymptoms: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤нр┤╛р┤╖р┤пр┤┐р╡╜ р┤▓р┤Хр╡Нр┤╖р┤гр┤Щр╡Нр┤Щр╡╛ р┤╡р┤┐р┤╡р┤░р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х",
            startRecording: "р┤▒р╡Жр┤Хр╡Нр┤Хр╡Лр╡╝р┤бр┤┐р┤Вр┤Чр╡Н р┤Жр┤░р┤Вр┤нр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х",
            aiDiagnosis: "AI р┤бр┤пр┤Чр╡Нр┤ир╡Лр┤╕р┤┐р┤╕р╡Н",
            analyzing: "р┤╡р┤┐р┤╢р┤Хр┤▓р┤ир┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤ир╡Нр┤ир╡Б... 85%",
            possibleCause: "р┤╕р┤╛р┤зр╡Нр┤пр┤др┤пр╡Бр┤│р╡Нр┤│ р┤Хр┤╛р┤░р┤гр┤В: р┤лр╡Вр┤Яр╡Нр┤Яр╡Н & р┤ор╡Чр┤др╡Нр┤др╡Н р┤бр┤┐р┤╕р╡Ар┤╕р╡Н (р┤Хр╡Лр╡║р┤лр┤┐р┤бр╡╗р┤╕р╡Н: 85%)",
            nutritionalDef: "р┤╕р┤╛р┤зр╡Нр┤пр┤др┤пр╡Бр┤│р╡Нр┤│ р┤Хр┤╛р┤░р┤гр┤В: р┤кр╡Лр┤╖р┤Хр┤╛р┤╣р┤╛р┤░р┤Хр╡Нр┤Хр╡Бр┤▒р┤╡р╡Н (р┤Хр╡Лр╡║р┤лр┤┐р┤бр╡╗р┤╕р╡Н: 60%)",
            preventiveSteps: "р┤кр╡Нр┤░р┤др┤┐р┤░р╡Лр┤з р┤ир┤Яр┤кр┤Яр┤┐р┤Хр╡╛:",
            isolate: "р┤мр┤╛р┤зр┤┐р┤Ър╡Нр┤Ъ р┤ор╡Гр┤Чр┤Щр╡Нр┤Щр┤│р╡Ж р┤Йр┤Яр╡╗ р┤Рр┤╕р╡Кр┤▓р╡Зр┤▒р╡Нр┤▒р╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            disinfect: "р┤лр╡Ар┤бр┤┐р┤Вр┤Чр╡Н р┤Пр┤░р┤┐р┤пр┤Хр╡╛ р┤бр┤┐р┤╕р┤┐р╡╗р┤лр╡Жр┤Хр╡Нр┤▒р╡Нр┤▒р╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            contactVet: "р┤╡р╡Жр┤▒р╡Нр┤▒р┤▒р┤┐р┤ир┤▒р┤┐р┤пр╡Ж р┤мр┤ир╡Нр┤зр┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤Х",
            monitorAnimals: "р┤ор┤▒р╡Нр┤▒р╡Н р┤ор╡Гр┤Чр┤Щр╡Нр┤Щр┤│р╡Ж р┤Ер┤Яр╡Бр┤др╡Нр┤др╡Н р┤ор╡Лр┤гр┤┐р┤▒р╡Нр┤▒р╡╝ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            expertVerification: "р┤╡р┤┐р┤жр┤Чр╡Нр┤з р┤Хр╡Нр┤░р┤ор╡Ар┤Хр┤░р┤гр┤В",
            vetTyping: "р┤╡р╡Жр┤▒р╡Нр┤▒р┤▒р┤┐р┤ир┤▒р┤┐ р┤Яр╡Ир┤кр╡Нр┤кр┤┐р┤Вр┤Чр╡Н...",
            chatVet: "р┤╡р╡Жр┤▒р╡Нр┤▒р┤▒р┤┐р┤ир┤▒р┤┐р┤пр╡Бр┤ор┤╛р┤пр┤┐ р┤Ър┤╛р┤▒р╡Нр┤▒р╡Н",
            askFarmers: "р┤╕р┤╣ р┤Хр╡╝р┤╖р┤Хр┤░р╡Лр┤Яр╡Н р┤Ър╡Лр┤жр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х",
            outbreakMap: "р┤Фр┤Яр╡Нр┤Яр╡НтАМр┤мр╡Нр┤░р╡Зр┤Хр╡Нр┤Хр╡Н р┤ор┤╛р┤кр╡Нр┤кр╡Н ЁЯЧ║я╕П",
            realTimeOutbreak: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤кр╡Нр┤░р┤жр╡Зр┤╢р┤др╡Нр┤др┤┐р┤▓р╡Ж р┤▒р┤┐р┤пр╡╜-р┤Яр╡Ир┤В р┤░р╡Лр┤Ч р┤Фр┤Яр╡Нр┤Яр╡НтАМр┤мр╡Нр┤░р╡Зр┤Хр╡Нр┤Хр╡Н р┤ор╡Лр┤гр┤┐р┤▒р╡Нр┤▒р┤▒р┤┐р┤Вр┤Чр╡Н",
            all: "р┤Ор┤▓р╡Нр┤▓р┤╛р┤В",
            animal: "р┤ор╡Гр┤Чр┤В",
            crop: "р┤╡р┤┐р┤│",
            climate: "р┤Хр┤╛р┤▓р┤╛р┤╡р┤╕р╡Нр┤е",
            highRisk: "р┤Йр┤пр╡╝р┤ир╡Нр┤и р┤▒р┤┐р┤╕р╡Нр┤Хр╡Н",
            mediumRisk: "р┤ор╡Ар┤бр┤┐р┤пр┤В р┤▒р┤┐р┤╕р╡Нр┤Хр╡Н",
            yourFarm: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤лр┤╛р┤В",
            high: "р┤Йр┤пр╡╝р┤ир╡Нр┤и",
            medium: "р┤ор╡Ар┤бр┤┐р┤пр┤В",
            low: "р┤др┤╛р┤┤р╡Нр┤ир╡Нр┤и",
            recentAlerts: "р┤Ер┤Яр╡Бр┤др╡Нр┤др┤┐р┤Яр╡Жр┤пр╡Бр┤│р╡Нр┤│ р┤Ер┤▓р╡Зр╡╝р┤Яр╡Нр┤Яр╡Бр┤Хр╡╛",
            highAlert: "ЁЯЪи р┤Йр┤пр╡╝р┤ир╡Нр┤и р┤Ер┤▓р╡Зр╡╝р┤Яр╡Нр┤Яр╡Н",
            mediumAlert: "тЪая╕П р┤ор╡Ар┤бр┤┐р┤пр┤В р┤Ер┤▓р╡Зр╡╝р┤Яр╡Нр┤Яр╡Н",
            weatherAlert: "ЁЯМзя╕П р┤Хр┤╛р┤▓р┤╛р┤╡р┤╕р╡Нр┤е р┤Ер┤▓р╡Зр╡╝р┤Яр╡Нр┤Яр╡Н",
            allClear: "тЬЕ р┤Ор┤▓р╡Нр┤▓р┤╛р┤В р┤Хр╡Нр┤▓р┤┐р┤пр╡╝",
            farmRecords: "р┤лр┤╛р┤В р┤▒р╡Жр┤Хр╡Нр┤Хр╡Лр╡╝р┤бр╡Бр┤Хр╡╛ ЁЯУЛ",
            digitalDiary: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤лр┤╛р┤В р┤кр╡Нр┤░р┤╡р╡╝р┤др╡Нр┤др┤ир┤Щр╡Нр┤Щр╡╛р┤Хр╡Нр┤Хр╡Бр┤│р╡Нр┤│ р┤бр┤┐р┤Ьр┤┐р┤▒р╡Нр┤▒р╡╜ р┤бр┤пр┤▒р┤┐",
            vaccination: "р┤╡р┤╛р┤Хр╡Нр┤╕р┤┐р┤ир╡Зр┤╖р╡╗",
            treatment: "р┤Ър┤┐р┤Хр┤┐р┤др╡Нр┤╕",
            sanitation: "р┤╕р┤╛р┤ир┤┐р┤▒р╡Нр┤▒р╡Зр┤╖р╡╗",
            productivity: "р┤Йр╡╜р┤кр╡Нр┤кр┤╛р┤жр┤ир┤Хр╡Нр┤╖р┤ор┤д",
            addEntry: "р┤Ор╡╗р┤Яр╡Нр┤░р┤┐ р┤Ър╡Зр╡╝р┤Хр╡Нр┤Хр╡Бр┤Х",
            complete: "р┤кр╡Вр╡╝р┤др╡Нр┤др┤┐р┤пр┤╛р┤пр┤┐",
            dueSoon: "р┤Йр┤Яр╡╗ р┤бр╡Нр┤пр╡В",
            ongoing: "р┤Ур╡║р┤Чр╡Лр┤пр┤┐р┤Вр┤Чр╡Н",
            belowTarget: "р┤Яр┤╛р╡╝р┤Чр┤▒р╡Нр┤▒р┤┐р┤ир╡Н р┤др┤╛р┤┤р╡Ж",
            exportPDF: "PDF р┤Ор┤Хр╡Нр┤╕р╡Нр┤кр╡Лр╡╝р┤Яр╡Нр┤Яр╡Н",
            shareReport: "р┤▒р┤┐р┤кр╡Нр┤кр╡Лр╡╝р┤Яр╡Нр┤Яр╡Н р┤╖р╡Жр┤пр╡╝ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            hygiene: "р┤╣р╡Ир┤Ьр╡Ар╡╗ & р┤╕р┤╛р┤ир┤┐р┤▒р╡Нр┤▒р╡Зр┤╖р╡╗ р┤╕р╡Нр┤Хр┤╛р┤ир╡╝ ЁЯз╜",
            hygieneAssessment: "AI-р┤кр┤╡р╡╝р┤бр╡Н р┤╣р╡Ир┤Ьр╡Ар╡╗ р┤Ер┤╕р┤╕р╡Нр┤ор╡Жр┤ир╡Нр┤▒р╡Бр┤В р┤╢р╡Бр┤кр┤╛р╡╝р┤╢р┤Хр┤│р╡Бр┤В",
            cameraScanner: "р┤Хр╡Нр┤пр┤╛р┤ор┤▒ р┤╕р╡Нр┤Хр┤╛р┤ир╡╝",
            scanArea: "ЁЯУ╖ р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤лр┤╛р┤В р┤Пр┤░р┤┐р┤п р┤╕р╡Нр┤Хр┤╛р╡╗ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            pointCamera: "р┤╡р┤╛р┤Яр╡Нр┤Яр╡╝ р┤Яр┤╛р┤Щр╡Нр┤Хр╡Бр┤Хр╡╛, р┤лр╡Ар┤бр┤┐р┤Вр┤Чр╡Н р┤Пр┤░р┤┐р┤пр┤Хр╡╛ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤ор╡Гр┤Чр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤╖р╡Жр╡╜р┤Яр╡Нр┤Яр┤▒р╡Бр┤Хр┤│р┤┐р╡╜ р┤Хр╡Нр┤пр┤╛р┤ор┤▒ р┤кр╡Лр┤пр┤┐р┤ир╡Нр┤▒р╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            hygieneScore: "р┤ир┤┐р┤▓р┤╡р┤┐р┤▓р╡Ж р┤╣р╡Ир┤Ьр╡Ар╡╗ р┤╕р╡Нр┤Хр╡Лр╡╝: 78",
            goodScore: "р┤ир┤▓р╡Нр┤▓р┤др╡Н - р┤Ър╡Жр┤▒р┤┐р┤п р┤ор╡Жр┤Ър╡Нр┤Ър┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др┤▓р╡Бр┤Хр╡╛ р┤Жр┤╡р┤╢р╡Нр┤пр┤ор┤╛р┤гр╡Н",
            recommendations: "р┤╢р╡Бр┤кр┤╛р╡╝р┤╢р┤Хр╡╛",
            cleanWater: "ЁЯТз тЬФ р┤Хр╡Нр┤▓р╡Ар╡╗ р┤╡р┤╛р┤Яр╡Нр┤Яр╡╝ р┤Яр┤╛р┤Щр╡Нр┤Хр╡Н",
            disinfectShed: "ЁЯПа тЬФ р┤бр┤┐р┤╕р┤┐р╡╗р┤лр╡Жр┤Хр╡Нр┤▒р╡Нр┤▒р╡Н р┤╖р╡Жр┤бр╡Н",
            pestControl: "ЁЯРЫ тЬФ р┤кр╡Жр┤╕р╡Нр┤▒р╡Нр┤▒р╡Н р┤Хр╡║р┤Яр╡Нр┤░р╡Лр╡╛",
            goodPractices: "тЬЕ тЬФ р┤ир┤▓р╡Нр┤▓ р┤кр╡Нр┤░р┤╛р┤Хр╡Нр┤Яр╡Ар┤╕р╡Бр┤Хр╡╛",
            quickTips: "р┤Хр╡Нр┤╡р┤┐р┤Хр╡Нр┤Хр╡Н р┤Яр┤┐р┤кр╡Нр┤╕р╡Н:",
            cleanWaterDaily: "р┤жр╡Ир┤ир┤Вр┤жр┤┐р┤и р┤╡р┤╛р┤Яр╡Нр┤Яр╡╝ р┤╕р╡Лр┤┤р╡Нр┤╕р╡Бр┤Хр╡╛ р┤Хр╡Нр┤▓р╡Ар╡╗ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            removeManure: "р┤ор┤╛р┤ир╡Нр┤пр╡Вр╡╝ р┤▒р╡Жр┤Чр╡Бр┤▓р┤▒р┤╛р┤пр┤┐ р┤ир╡Ар┤Хр╡Нр┤Хр┤В р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            disinfectTools: "р┤Йр┤кр┤пр╡Лр┤Чр┤┐р┤Ър╡Нр┤Ъ р┤╢р╡Зр┤╖р┤В р┤Яр╡Вр┤│р╡Бр┤Хр╡╛ р┤бр┤┐р┤╕р┤┐р╡╗р┤лр╡Жр┤Хр╡Нр┤▒р╡Нр┤▒р╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            monitorPests: "р┤кр╡Жр┤╕р╡Нр┤▒р╡Нр┤▒р╡Н р┤Ер┤Яр┤пр┤╛р┤│р┤Щр╡Нр┤Щр╡╛ р┤ор╡Лр┤гр┤┐р┤▒р╡Нр┤▒р╡╝ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            buddyAI: "р┤лр┤╛р╡╝р┤ор╡╝ р┤мр┤бр╡Нр┤бр┤┐ AI ЁЯдЦ",
            farmingAssistant: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤Зр┤ир╡Нр┤▒р┤▓р┤┐р┤Ьр┤ир╡Нр┤▒р╡Н р┤лр┤╛р╡╝р┤ор┤┐р┤Вр┤Чр╡Н р┤Ер┤╕р┤┐р┤╕р╡Нр┤▒р╡Нр┤▒р┤ир╡Нр┤▒р╡Н",
            voiceAssistant: "р┤╡р╡Лр┤пр╡НтАМр┤╕р╡Н р┤Ер┤╕р┤┐р┤╕р╡Нр┤▒р╡Нр┤▒р┤ир╡Нр┤▒р╡Н",
            tapSpeak: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤нр┤╛р┤╖р┤пр┤┐р╡╜ р┤╕р┤Вр┤╕р┤╛р┤░р┤┐р┤Хр╡Нр┤Хр┤╛р╡╗ р┤Яр┤╛р┤кр╡Нр┤кр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            hello: "р┤╣р┤▓р╡Л! р┤Юр┤╛р╡╗ р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤лр┤╛р╡╝р┤ор┤┐р┤Вр┤Чр╡Н р┤мр┤бр╡Нр┤бр┤┐р┤пр┤╛р┤гр╡Н. р┤Зр┤ир╡Нр┤ир╡Н р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Ж р┤Ор┤Щр╡Нр┤Щр┤ир╡Ж р┤╕р┤╣р┤╛р┤пр┤┐р┤Хр╡Нр┤Хр┤╛р┤В?",
            cowSick: "р┤Ор┤ир╡Нр┤▒р╡Ж р┤кр┤╢р╡Б р┤░р╡Лр┤Чр┤мр┤╛р┤зр┤┐р┤др┤ор┤╛р┤гр╡Жр┤ир╡Нр┤ир╡Н р┤др╡Лр┤ир╡Нр┤ир╡Бр┤ир╡Нр┤ир╡Б, р┤Ор┤ир╡Нр┤др╡Н р┤Ър╡Жр┤пр╡Нр┤пр┤гр┤В?",
            askSymptoms: "р┤Юр┤╛р╡╗ р┤╕р┤╣р┤╛р┤пр┤┐р┤Хр╡Нр┤Хр┤╛р┤В! р┤▓р┤Хр╡Нр┤╖р┤гр┤Щр╡Нр┤Щр╡╛ р┤╡р┤┐р┤╡р┤░р┤┐р┤Хр╡Нр┤Хр┤╛р┤ор╡Л? р┤кр┤╢р╡Б р┤╕р┤╛р┤зр┤╛р┤░р┤гр┤пр┤╛р┤пр┤┐ р┤нр┤Хр╡Нр┤╖р┤гр┤В р┤Хр┤┤р┤┐р┤Хр╡Нр┤Хр╡Бр┤ир╡Нр┤ир╡Бр┤гр╡Нр┤Яр╡Л? р┤Пр┤др╡Жр┤Щр╡Нр┤Хр┤┐р┤▓р╡Бр┤В р┤бр┤┐р┤╕р╡Нр┤Яр╡Нр┤░р┤╕р╡Н р┤Ер┤Яр┤пр┤╛р┤│р┤Щр╡Нр┤Щр╡╛ р┤Хр┤╛р┤гр╡Бр┤ир╡Нр┤ир╡Бр┤гр╡Нр┤Яр╡Л?",
            send: "р┤Ер┤пр┤Хр╡Нр┤Хр╡Бр┤Х",
            ivrSupport: "ЁЯУЮ IVR р┤╕р┤кр╡Нр┤кр╡Лр╡╝р┤Яр╡Нр┤Яр╡Н",
            smsSupport: "ЁЯТм SMS р┤╕р┤кр╡Нр┤кр╡Лр╡╝р┤Яр╡Нр┤Яр╡Н",
            tipDay: "ЁЯТб р┤бр╡З р┤Ур┤лр╡Н р┤Яр┤┐р┤кр╡Нр┤кр╡Н",
            tempMonitor: "ЁЯМбя╕П р┤Яр╡Жр┤ор╡Нр┤кр┤▒р╡Зр┤Ър╡Нр┤Ър╡╝ р┤ор╡Лр┤гр┤┐р┤▒р╡Нр┤▒р┤▒р┤┐р┤Вр┤Чр╡Н",
            tempGuide: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤ор╡Гр┤Чр┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤мр╡Лр┤бр┤┐ р┤Яр╡Жр┤ор╡Нр┤кр┤▒р╡Зр┤Ър╡Нр┤Ър╡╝ р┤▒р╡Жр┤Чр╡Бр┤▓р┤▒р┤╛р┤пр┤┐ р┤Ър╡Жр┤Хр╡Нр┤Хр╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х. р┤кр┤╢р╡Бр┤Хр╡Нр┤Хр╡╛р┤Хр╡Нр┤Хр╡Бр┤│р╡Нр┤│ р┤╕р┤╛р┤зр┤╛р┤░р┤г р┤Яр╡Жр┤ор╡Нр┤кр┤▒р╡Зр┤Ър╡Нр┤Ър╡╝ 101.5┬░F (38.6┬░C). р┤Йр┤пр╡╝р┤ир╡Нр┤и р┤Яр╡Жр┤ор╡Нр┤кр┤▒р╡Зр┤Ър╡Нр┤Ър┤▒р╡Бр┤Хр╡╛ р┤лр╡Ар┤╡р╡╝ р┤Ер┤▓р╡Нр┤▓р╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤╣р╡Ар┤▒р╡Нр┤▒р╡Н р┤╕р╡Нр┤Яр╡Нр┤░р╡Жр┤╕р╡Н р┤╕р╡Вр┤Ър┤┐р┤кр╡Нр┤кр┤┐р┤Хр╡Нр┤Хр┤╛р┤В.",
            setReminder: "р┤Яр╡Жр┤ор╡Нр┤кр┤▒р╡Зр┤Ър╡Нр┤Ър╡╝ р┤▒р┤┐р┤ор╡Ир╡╗р┤бр╡╝ р┤╕р╡Жр┤▒р╡Нр┤▒р╡Н р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤Х",
            learnMore: "р┤Хр╡Вр┤Яр╡Бр┤др╡╜ р┤Ер┤▒р┤┐р┤пр╡Бр┤Х",
            relatedTopics: "р┤мр┤ир╡Нр┤зр┤кр╡Нр┤кр╡Жр┤Яр╡Нр┤Я р┤Яр╡Лр┤кр╡Нр┤кр┤┐р┤Хр╡Нр┤Хр╡Бр┤Хр╡╛:",
            heatStress: "р┤╣р╡Ар┤▒р╡Нр┤▒р╡Н р┤╕р╡Нр┤Яр╡Нр┤░р╡Жр┤╕р╡Н р┤кр╡Нр┤░р┤┐р┤╡р╡╗р┤╖р╡╗",
            feverTreatment: "р┤лр╡Ар┤╡р╡╝ р┤Яр╡Нр┤░р╡Ар┤Яр╡Нр┤Яр╡Нр┤ор╡Жр┤ир╡Нр┤▒р╡Н р┤Чр╡Ир┤бр╡Н",
            thermometer: "р┤др╡Жр╡╝р┤ор╡Лр┤ор╡Ар┤▒р╡Нр┤▒р╡╝ р┤Йр┤кр┤пр╡Лр┤Чр┤В"
        },
        kn: {
            welcome: "р▓др▓┐р▓░р│Бр▓Чр▓┐ р▓╕р│Нр▓╡р▓╛р▓Чр▓д, р▓Хр│Гр▓╖р▓┐р▓Х! ЁЯСЛ",
            monitor: "р▓ир▓┐р▓ор│Нр▓о р▓лр▓╛р▓░р│Нр▓ор│НтАМр▓и р▓Жр▓░р│Лр▓Чр│Нр▓п р▓ор▓др│Нр▓др│Б р▓Йр▓др│Нр▓кр▓╛р▓жр▓Хр▓др│Жр▓пр▓ир│Нр▓ир│Б р▓ор▓╛р▓ир▓┐р▓Яр▓░р│Н р▓ор▓╛р▓бр▓┐",
            digitalTwin: "р▓бр▓┐р▓Ьр▓┐р▓Яр▓▓р│Н р▓Яр│Нр▓╡р▓┐р▓ир│Н р▓лр▓╛р▓░р│Нр▓ор│Н",
            realTime: "р▓░р▓┐р▓пр▓▓р│Н-р▓Яр│Ир▓ор│Н р▓лр▓╛р▓░р│Нр▓ор│Н р▓ор▓╛р▓ир▓┐р▓Яр▓░р▓┐р▓Вр▓Чр│Н р▓ор▓др│Нр▓др│Б р▓Ер▓ир▓▓р▓┐р▓Яр▓┐р▓Хр│Нр▓╕р│Н",
            livestockHealth: "р▓кр▓╢р│Бр▓Чр▓│ р▓Жр▓░р│Лр▓Чр│Нр▓п: 95%",
            cropStatus: "р▓мр│Жр▓│р│Ж р▓╕р│Нр▓ер▓┐р▓др▓┐: р▓Йр▓др│Нр▓др▓о",
            dailyScan: "р▓жр│Ир▓ир▓Вр▓жр▓┐р▓и р▓╕р│Нр▓Хр│Нр▓пр▓╛р▓ир│Н",
            uploadPhotos: "AI р▓Жр▓░р│Лр▓Чр│Нр▓п р▓╡р▓┐р▓╢р│Нр▓▓р│Зр▓╖р▓гр│Жр▓Чр▓╛р▓Чр▓┐ р▓лр│Лр▓Яр│Лр▓Чр▓│р▓ир│Нр▓ир│Б р▓Ер▓кр│НтАМр▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐",
            tapUpload: "ЁЯУ╖ р▓лр│Лр▓Яр│Л р▓Ер▓кр│НтАМр▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓▓р│Б р▓Яр│Нр▓пр▓╛р▓кр│Н р▓ор▓╛р▓бр▓┐",
            startScan: "р▓╕р│Нр▓Хр│Нр▓пр▓╛р▓ир│Н р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р▓┐",
            activeAlerts: "р▓╕р▓Хр│Нр▓░р▓┐р▓п р▓Ер▓▓р▓░р│Нр▓Яр│НтАМр▓Чр▓│р│Б",
            diseaseCheck: "р▓░р│Лр▓Ч р▓кр▓░р│Ар▓Хр│Нр▓╖р│Ж ЁЯФм",
            aiPowered: "AI-р▓кр▓╡р▓░р│Нр▓бр│Н р▓░р│Лр▓Ч р▓кр▓др│Нр▓др│Ж р▓ор▓др│Нр▓др│Б р▓бр▓пр▓╛р▓Чр│Нр▓ир│Лр▓╕р▓┐р▓╕р│Н",
            uploadMedia: "р▓ор│Ар▓бр▓┐р▓пр▓╛ р▓Ер▓кр│НтАМр▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐",
            uploadPhoto: "р▓лр│Лр▓Яр│Л р▓Ер▓кр│НтАМр▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐",
            takePhoto: "р▓кр│Нр▓░р▓нр▓╛р▓╡р▓┐р▓д р▓кр│Нр▓░р▓╛р▓гр▓┐/р▓мр│Жр▓│р│Жр▓п р▓╕р│Нр▓кр▓╖р│Нр▓Я р▓лр│Лр▓Яр│Л р▓др│Жр▓Чр│Жр▓пр▓┐р▓░р▓┐",
            choosePhoto: "р▓лр│Лр▓Яр│Л р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐",
            uploadVideo: "р▓╡р│Ар▓бр▓┐р▓пр│Л р▓Ер▓кр│НтАМр▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐",
            recordVideo: "р▓кр│Нр▓░р▓╛р▓гр▓┐ р▓ир▓бр▓╡р▓│р▓┐р▓Хр│Ж р▓Ер▓ер▓╡р▓╛ р▓▓р▓Хр│Нр▓╖р▓гр▓Чр▓│р▓ир│Нр▓ир│Б р▓░р│Жр▓Хр▓╛р▓░р│Нр▓бр│Н р▓ор▓╛р▓бр▓┐",
            recordVideoBtn: "р▓╡р│Ар▓бр▓┐р▓пр│Л р▓░р│Жр▓Хр▓╛р▓░р│Нр▓бр│Н р▓ор▓╛р▓бр▓┐",
            voiceSymptoms: "р▓зр│Нр▓╡р▓ир▓┐ р▓▓р▓Хр│Нр▓╖р▓гр▓Чр▓│р│Б",
            describeSymptoms: "р▓ир▓┐р▓ор│Нр▓о р▓нр▓╛р▓╖р│Жр▓пр▓▓р│Нр▓▓р▓┐ р▓▓р▓Хр│Нр▓╖р▓гр▓Чр▓│р▓ир│Нр▓ир│Б р▓╡р▓┐р▓╡р▓░р▓┐р▓╕р▓┐",
            startRecording: "р▓░р│Жр▓Хр▓╛р▓░р│Нр▓бр▓┐р▓Вр▓Чр│Н р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р▓┐",
            aiDiagnosis: "AI р▓бр▓пр▓╛р▓Чр│Нр▓ир│Лр▓╕р▓┐р▓╕р│Н",
            analyzing: "р▓╡р▓┐р▓╢р│Нр▓▓р│Зр▓╖р▓гр│Ж р▓ор▓╛р▓бр│Бр▓др│Нр▓др▓┐р▓жр│Ж... 85%",
            possibleCause: "р▓╕р▓Вр▓нр▓╡р▓ир│Ар▓п р▓Хр▓╛р▓░р▓г: р▓лр│Бр▓Яр│Н & р▓ор│Мр▓др│Н р▓бр▓┐р▓╕р│Ар▓╕р│Н (р▓╡р▓┐р▓╢р│Нр▓╡р▓╛р▓╕: 85%)",
            nutritionalDef: "р▓╕р▓Вр▓нр▓╡р▓ир│Ар▓п р▓Хр▓╛р▓░р▓г: р▓кр│Мр▓╖р│Нр▓Яр▓┐р▓Хр▓др│Ж р▓Хр│Кр▓░р▓др│Ж (р▓╡р▓┐р▓╢р│Нр▓╡р▓╛р▓╕: 60%)",
            preventiveSteps: "р▓др▓бр│Жр▓Чр▓Яр│Нр▓Яр│Бр▓╡ р▓Хр│Нр▓░р▓ор▓Чр▓│р│Б:",
            isolate: "р▓кр│Нр▓░р▓нр▓╛р▓╡р▓┐р▓д р▓кр│Нр▓░р▓╛р▓гр▓┐р▓Чр▓│р▓ир│Нр▓ир│Б р▓др▓Хр│Нр▓╖р▓гр▓╡р│З р▓Рр▓╕р│Лр▓▓р│Зр▓Яр│Н р▓ор▓╛р▓бр▓┐",
            disinfect: "р▓лр│Ар▓бр▓┐р▓Вр▓Чр│Н р▓Пр▓░р▓┐р▓пр▓╛р▓Чр▓│р▓ир│Нр▓ир│Б р▓бр▓┐р▓╕р▓┐р▓ир│Нр▓лр│Жр▓Хр│Нр▓Яр│Н р▓ор▓╛р▓бр▓┐",
            contactVet: "р▓кр▓╢р│Бр▓╡р│Ир▓жр│Нр▓пр▓░р▓ир│Нр▓ир│Б р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓┐р▓╕р▓┐",
            monitorAnimals: "р▓Зр▓др▓░ р▓кр│Нр▓░р▓╛р▓гр▓┐р▓Чр▓│р▓ир│Нр▓ир│Б р▓╣р▓др│Нр▓др▓┐р▓░р▓жр▓┐р▓Вр▓ж р▓ор▓╛р▓ир▓┐р▓Яр▓░р│Н р▓ор▓╛р▓бр▓┐",
            expertVerification: "р▓др▓Ьр│Нр▓Ю р▓жр│Гр▓вр│Ар▓Хр▓░р▓г",
            vetTyping: "р▓кр▓╢р│Бр▓╡р│Ир▓жр│Нр▓п р▓Яр│Ир▓кр▓┐р▓Вр▓Чр│Н...",
            chatVet: "р▓кр▓╢р│Бр▓╡р│Ир▓жр│Нр▓пр▓░р│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓Ър▓╛р▓Яр│Н",
            askFarmers: "р▓╕р▓╣ р▓Хр│Гр▓╖р▓┐р▓Хр▓░р▓ир│Нр▓ир│Б р▓Хр│Зр▓│р▓┐",
            outbreakMap: "р▓Фр▓Яр│НтАМр▓мр│Нр▓░р│Зр▓Хр│Н р▓ор│Нр▓пр▓╛р▓кр│Н ЁЯЧ║я╕П",
            realTimeOutbreak: "р▓ир▓┐р▓ор│Нр▓о р▓кр│Нр▓░р▓жр│Зр▓╢р▓жр▓▓р│Нр▓▓р▓┐ р▓░р▓┐р▓пр▓▓р│Н-р▓Яр│Ир▓ор│Н р▓░р│Лр▓Ч р▓Фр▓Яр│НтАМр▓мр│Нр▓░р│Зр▓Хр│Н р▓ор▓╛р▓ир▓┐р▓Яр▓░р▓┐р▓Вр▓Чр│Н",
            all: "р▓Ор▓▓р│Нр▓▓р▓╛",
            animal: "р▓кр│Нр▓░р▓╛р▓гр▓┐",
            crop: "р▓мр│Жр▓│р│Ж",
            climate: "р▓╣р▓╡р▓╛р▓ор▓╛р▓и",
            highRisk: "р▓╣р│И р▓░р▓┐р▓╕р│Нр▓Хр│Н",
            mediumRisk: "р▓ор│Ар▓бр▓┐р▓пр▓В р▓░р▓┐р▓╕р│Нр▓Хр│Н",
            yourFarm: "р▓ир▓┐р▓ор│Нр▓о р▓лр▓╛р▓░р│Нр▓ор│Н",
            high: "р▓╣р│И",
            medium: "р▓ор│Ар▓бр▓┐р▓пр▓В",
            low: "р▓Хр▓бр▓┐р▓ор│Ж",
            recentAlerts: "р▓Зр▓др│Нр▓др│Ар▓Ър▓┐р▓и р▓Ер▓▓р▓░р│Нр▓Яр│НтАМр▓Чр▓│р│Б",
            highAlert: "ЁЯЪи р▓╣р│И р▓Ер▓▓р▓░р│Нр▓Яр│Н",
            mediumAlert: "тЪая╕П р▓ор│Ар▓бр▓┐р▓пр▓В р▓Ер▓▓р▓░р│Нр▓Яр│Н",
            weatherAlert: "ЁЯМзя╕П р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓Ер▓▓р▓░р│Нр▓Яр│Н",
            allClear: "тЬЕ р▓Ор▓▓р│Нр▓▓р▓╛ р▓Хр│Нр▓▓р▓┐р▓пр▓░р│Н",
            farmRecords: "р▓лр▓╛р▓░р│Нр▓ор│Н р▓░р│Жр▓Хр▓╛р▓░р│Нр▓бр│НтАМр▓Чр▓│р│Б ЁЯУЛ",
            digitalDiary: "р▓ир▓┐р▓ор│Нр▓о р▓лр▓╛р▓░р│Нр▓ор│Н р▓Ър▓Яр│Бр▓╡р▓Яр▓┐р▓Хр│Жр▓Чр▓│р▓┐р▓Чр▓╛р▓Чр▓┐ р▓бр▓┐р▓Ьр▓┐р▓Яр▓▓р│Н р▓бр│Ир▓░р▓┐",
            vaccination: "р▓▓р▓╕р▓┐р▓Хр│Ж",
            treatment: "р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж",
            sanitation: "р▓╕р│Нр▓пр▓╛р▓ир▓┐р▓Яр│Зр▓╢р▓ир│Н",
            productivity: "р▓Йр▓др│Нр▓кр▓╛р▓жр▓Хр▓др│Ж",
            addEntry: "р▓Ор▓Вр▓Яр│Нр▓░р▓┐ р▓╕р│Зр▓░р▓┐р▓╕р▓┐",
            complete: "р▓кр│Вр▓░р│Нр▓гр▓Чр│Кр▓Вр▓бр▓┐р▓жр│Ж",
            dueSoon: "р▓╢р│Ар▓Шр│Нр▓░р▓жр▓▓р│Нр▓▓р│З р▓бр│Нр▓пр│В",
            ongoing: "р▓ир▓бр│Жр▓пр│Бр▓др│Нр▓др▓┐р▓жр│Ж",
            belowTarget: "р▓Яр▓╛р▓░р│Нр▓Чр│Жр▓Яр│НтАМр▓Чр▓┐р▓Вр▓д р▓Хр▓бр▓┐р▓ор│Ж",
            exportPDF: "PDF р▓░р▓лр│Нр▓др│Б",
            shareReport: "р▓░р▓┐р▓кр│Лр▓░р│Нр▓Яр│Н р▓╣р▓Вр▓Ър▓┐р▓Хр│Кр▓│р│Нр▓│р▓┐",
            hygiene: "р▓╣р│Ир▓Ьр│Ар▓ир│Н & р▓╕р│Нр▓пр▓╛р▓ир▓┐р▓Яр│Зр▓╢р▓ир│Н р▓╕р│Нр▓Хр│Нр▓пр▓╛р▓ир▓░р│Н ЁЯз╜",
            hygieneAssessment: "AI-р▓кр▓╡р▓░р│Нр▓бр│Н р▓╣р│Ир▓Ьр│Ар▓ир│Н р▓ор│Мр▓▓р│Нр▓пр▓ор▓╛р▓кр▓и р▓ор▓др│Нр▓др│Б р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Бр▓Чр▓│р│Б",
            cameraScanner: "р▓Хр│Нр▓пр▓╛р▓ор│Жр▓░р▓╛ р▓╕р│Нр▓Хр│Нр▓пр▓╛р▓ир▓░р│Н",
            scanArea: "ЁЯУ╖ р▓ир▓┐р▓ор│Нр▓о р▓лр▓╛р▓░р│Нр▓ор│Н р▓Пр▓░р▓┐р▓пр▓╛ р▓╕р│Нр▓Хр│Нр▓пр▓╛р▓ир│Н р▓ор▓╛р▓бр▓┐",
            pointCamera: "р▓ир│Ар▓░р▓┐р▓и р▓Яр│Нр▓пр▓╛р▓Вр▓Хр│НтАМр▓Чр▓│р│Б, р▓лр│Ар▓бр▓┐р▓Вр▓Чр│Н р▓Пр▓░р▓┐р▓пр▓╛р▓Чр▓│р│Б р▓Ер▓ер▓╡р▓╛ р▓кр▓╢р│Бр▓Чр▓│ р▓Жр▓╢р│Нр▓░р▓пр▓Чр▓│р▓▓р│Нр▓▓р▓┐ р▓Хр│Нр▓пр▓╛р▓ор│Жр▓░р▓╛ р▓кр▓╛р▓пр▓┐р▓Вр▓Яр│Н р▓ор▓╛р▓бр▓┐",
            hygieneScore: "р▓кр│Нр▓░р▓╕р│Нр▓др│Бр▓д р▓╣р│Ир▓Ьр│Ар▓ир│Н р▓╕р│Нр▓Хр│Лр▓░р│Н: 78",
            goodScore: "р▓Йр▓др│Нр▓др▓о - р▓╕р▓гр│Нр▓г р▓╕р│Бр▓зр▓╛р▓░р▓гр│Жр▓Чр▓│р│Б р▓мр│Зр▓Хр│Б",
            recommendations: "р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Бр▓Чр▓│р│Б",
            cleanWater: "ЁЯТз тЬФ р▓Хр│Нр▓▓р│Ар▓ир│Н р▓╡р▓╛р▓Яр▓░р│Н р▓Яр│Нр▓пр▓╛р▓Вр▓Хр│Н",
            disinfectShed: "ЁЯПа тЬФ р▓бр▓┐р▓╕р▓┐р▓ир│Нр▓лр│Жр▓Хр│Нр▓Яр│Н р▓╢р│Жр▓бр│Н",
            pestControl: "ЁЯРЫ тЬФ р▓кр│Жр▓╕р│Нр▓Яр│Н р▓Хр▓Вр▓Яр│Нр▓░р│Лр▓▓р│Н",
            goodPractices: "тЬЕ тЬФ р▓Йр▓др│Нр▓др▓о р▓Ер▓нр│Нр▓пр▓╛р▓╕р▓Чр▓│р│Б",
            quickTips: "р▓Хр│Нр▓╡р▓┐р▓Хр│Н р▓Яр▓┐р▓кр│Нр▓╕р│Н:",
            cleanWaterDaily: "р▓жр│Ир▓ир▓Вр▓жр▓┐р▓и р▓ир│Ар▓░р▓┐р▓и р▓ор│Вр▓▓р▓Чр▓│р▓ир│Нр▓ир│Б р▓╕р│Нр▓╡р▓Ър│Нр▓Ыр▓Чр│Кр▓│р▓┐р▓╕р▓┐",
            removeManure: "р▓Хр▓╕р▓╡р▓ир│Нр▓ир│Б р▓ир▓┐р▓пр▓ор▓┐р▓др▓╡р▓╛р▓Чр▓┐ р▓др│Жр▓Чр│Жр▓пр▓┐р▓░р▓┐",
            disinfectTools: "р▓мр▓│р▓╕р▓┐р▓ж р▓ир▓Вр▓др▓░ р▓Йр▓кр▓Хр▓░р▓гр▓Чр▓│р▓ир│Нр▓ир│Б р▓бр▓┐р▓╕р▓┐р▓ир│Нр▓лр│Жр▓Хр│Нр▓Яр│Н р▓ор▓╛р▓бр▓┐",
            monitorPests: "р▓кр│Жр▓╕р│Нр▓Яр│Н р▓Ър▓┐р▓╣р│Нр▓ир│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓ор▓╛р▓ир▓┐р▓Яр▓░р│Н р▓ор▓╛р▓бр▓┐",
            buddyAI: "р▓лр▓╛р▓░р│Нр▓ор▓░р│Н р▓мр▓бр│Нр▓бр▓┐ AI ЁЯдЦ",
            farmingAssistant: "р▓ир▓┐р▓ор│Нр▓о р▓мр│Бр▓жр│Нр▓зр▓┐р▓╡р▓Вр▓д р▓Хр│Гр▓╖р▓┐ р▓╕р▓╣р▓╛р▓пр▓Х",
            voiceAssistant: "р▓зр│Нр▓╡р▓ир▓┐ р▓╕р▓╣р▓╛р▓пр▓Х",
            tapSpeak: "р▓ир▓┐р▓ор│Нр▓о р▓нр▓╛р▓╖р│Жр▓пр▓▓р│Нр▓▓р▓┐ р▓ор▓╛р▓др▓ир▓╛р▓бр▓▓р│Б р▓Яр│Нр▓пр▓╛р▓кр│Н р▓ор▓╛р▓бр▓┐",
            hello: "р▓╣р▓▓р│Л! р▓ир▓╛р▓ир│Б р▓ир▓┐р▓ор│Нр▓о р▓лр▓╛р▓░р│Нр▓ор▓┐р▓Вр▓Чр│Н р▓мр▓бр│Нр▓бр▓┐. р▓Зр▓Вр▓жр│Б р▓ир▓┐р▓ор▓Чр│Ж р▓╣р│Зр▓Чр│Ж р▓╕р▓╣р▓╛р▓п р▓ор▓╛р▓бр▓мр▓╣р│Бр▓жр│Б?",
            cowSick: "р▓ир▓ир│Нр▓и р▓╣р▓╕р│Б р▓Ер▓ир▓╛р▓░р│Лр▓Чр│Нр▓пр▓жр▓Вр▓др│Ж р▓Хр▓╛р▓гр│Бр▓др│Нр▓др▓жр│Ж, р▓Пр▓ир│Б р▓ор▓╛р▓бр▓мр│Зр▓Хр│Б?",
            askSymptoms: "р▓ир▓╛р▓ир│Б р▓╕р▓╣р▓╛р▓п р▓ор▓╛р▓бр▓мр▓▓р│Нр▓▓р│Ж! р▓▓р▓Хр│Нр▓╖р▓гр▓Чр▓│р▓ир│Нр▓ир│Б р▓╡р▓┐р▓╡р▓░р▓┐р▓╕р▓мр▓▓р│Нр▓▓р▓┐р▓░р▓╛? р▓╣р▓╕р│Б р▓╕р▓╛р▓ор▓╛р▓ир│Нр▓пр▓╡р▓╛р▓Чр▓┐ р▓др▓┐р▓ир│Нр▓ир│Бр▓др│Нр▓др▓┐р▓жр│Жр▓пр│З? р▓пр▓╛р▓╡р│Бр▓жр│З р▓бр▓┐р▓╕р│Нр▓Яр│Нр▓░р│Жр▓╕р│Н р▓Ър▓┐р▓╣р│Нр▓ир│Жр▓Чр▓│р│Б р▓Хр▓╛р▓гр│Бр▓др│Нр▓др▓╡р│Жр▓пр│З?",
            send: "р▓Хр▓│р│Бр▓╣р▓┐р▓╕р▓┐",
            ivrSupport: "ЁЯУЮ IVR р▓мр│Жр▓Вр▓мр▓▓",
            smsSupport: "ЁЯТм SMS р▓мр│Жр▓Вр▓мр▓▓",
            tipDay: "ЁЯТб р▓жр▓┐р▓ир▓ж р▓Яр▓┐р▓кр│Н",
            tempMonitor: "ЁЯМбя╕П р▓др▓╛р▓кр▓ор▓╛р▓и р▓ор▓╛р▓ир▓┐р▓Яр▓░р▓┐р▓Вр▓Чр│Н",
            tempGuide: "р▓ир▓┐р▓ор│Нр▓о р▓кр▓╢р│Бр▓Чр▓│ р▓жр│Зр▓╣ р▓др▓╛р▓кр▓ор▓╛р▓ир▓╡р▓ир│Нр▓ир│Б р▓ир▓┐р▓пр▓ор▓┐р▓др▓╡р▓╛р▓Чр▓┐ р▓кр▓░р│Ар▓Хр│Нр▓╖р▓┐р▓╕р▓┐. р▓Ьр▓╛р▓ир│Бр▓╡р▓╛р▓░р│Бр▓Чр▓│р▓┐р▓Чр│Ж р▓╕р▓╛р▓ор▓╛р▓ир│Нр▓п р▓др▓╛р▓кр▓ор▓╛р▓и 101.5┬░F (38.6┬░C). р▓╣р│Жр▓Ър│Нр▓Ър▓┐р▓и р▓др▓╛р▓кр▓ор▓╛р▓ир▓Чр▓│р│Б р▓Ьр│Нр▓╡р▓░ р▓Ер▓ер▓╡р▓╛ р▓╢р▓╛р▓Ц р▓Тр▓др│Нр▓др▓бр▓╡р▓ир│Нр▓ир│Б р▓╕р│Вр▓Ър▓┐р▓╕р▓мр▓╣р│Бр▓жр│Б.",
            setReminder: "р▓др▓╛р▓кр▓ор▓╛р▓и р▓ир│Жр▓ир▓кр▓┐р▓╕р│Бр▓╡р▓┐р▓Хр│Жр▓пр▓ир│Нр▓ир│Б р▓╕р│Жр▓Яр│Н р▓ор▓╛р▓бр▓┐",
            learnMore: "р▓Зр▓ир│Нр▓ир▓╖р│Нр▓Яр│Б р▓др▓┐р▓│р▓┐р▓пр▓┐р▓░р▓┐",
            relatedTopics: "р▓╕р▓Вр▓мр▓Вр▓зр▓┐р▓д р▓╡р▓┐р▓╖р▓пр▓Чр▓│р│Б:",
            heatStress: "р▓╢р▓╛р▓Ц р▓Тр▓др│Нр▓др▓б р▓др▓бр│Жр▓Чр▓Яр│Нр▓Яр│Бр▓╡р▓┐р▓Хр│Ж",
            feverTreatment: "р▓Ьр│Нр▓╡р▓░ р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж р▓ор▓╛р▓░р│Нр▓Чр▓жр▓░р│Нр▓╢р▓┐",
            thermometer: "р▓ер▓░р│Нр▓ор▓╛р▓ор│Ар▓Яр▓░р│Н р▓мр▓│р▓Хр│Ж"
        }
    };

    // Language selector (fixed to use <a> tags instead of <select>)
    const languageSelectors = document.querySelectorAll('.language-selector a');
    languageSelectors.forEach(a => {
        a.addEventListener('click', (e) => {
            e.preventDefault();
            const lang = e.target.getAttribute('data-lang');
            translatePage(lang);
        });
    });

    // Function to translate page content (expanded to cover more elements from all pages)
    function translatePage(lang) {
        const langData = translations[lang] || translations['en'];

        // Update main headings across pages
        document.querySelectorAll('section h2').forEach(h2 => {
            const text = h2.textContent.trim();
            if (text.includes('Welcome Back, Farmer')) h2.textContent = langData.welcome;
            if (text.includes('Disease Check')) h2.textContent = langData.diseaseCheck;
            if (text.includes('Outbreak Map')) h2.textContent = langData.outbreakMap;
            if (text.includes('Farm Records')) h2.textContent = langData.farmRecords;
            if (text.includes('Hygiene & Sanitation Scanner')) h2.textContent = langData.hygiene;
            if (text.includes('Farmer Buddy AI')) h2.textContent = langData.buddyAI;
            // Add for community if needed
        });

        // Update paragraphs and subtitles
        document.querySelectorAll('section p').forEach(p => {
            const text = p.textContent.trim();
            if (text.includes('Monitor your farm')) p.textContent = langData.monitor;
            if (text.includes('Real-time farm monitoring')) p.textContent = langData.realTime;
            if (text.includes('Upload photos for AI')) p.textContent = langData.uploadPhotos;
            if (text.includes('AI-powered disease detection')) p.textContent = langData.aiPowered;
            if (text.includes('Real-time disease outbreak')) p.textContent = langData.realTimeOutbreak;
            if (text.includes('Digital diary for your farm')) p.textContent = langData.digitalDiary;
            if (text.includes('AI-powered hygiene assessment')) p.textContent = langData.hygieneAssessment;
            if (text.includes('Your intelligent farming assistant')) p.textContent = langData.farmingAssistant;
            // Add more as needed for other paragraphs
        });

        // Update card headings and content
        document.querySelectorAll('.card h3').forEach(h3 => {
            const text = h3.textContent.trim();
            if (text === 'Digital Twin Farm') h3.textContent = langData.digitalTwin;
            if (text === 'Daily Scan') h3.textContent = langData.dailyScan;
            if (text === 'Active Alerts') h3.textContent = langData.activeAlerts;
            // Add more
        });

        document.querySelectorAll('.card .stats div, .card ul li').forEach(div => {
            const text = div.textContent.trim();
            if (text.includes('Livestock Health')) div.textContent = langData.livestockHealth;
            if (text.includes('Crop Status')) div.textContent = langData.cropStatus;
            // Add more for alerts, etc.
        });

        // Update buttons
        document.querySelectorAll('button').forEach(btn => {
            const text = btn.textContent.trim();
            if (text === 'Start Scan') btn.textContent = langData.startScan;
            if (text === 'Choose Photo') btn.textContent = langData.choosePhoto;
            if (text === 'Record Video') btn.textContent = langData.recordVideoBtn;
            if (text === 'Start Recording') btn.textContent = langData.startRecording;
            if (text === 'Chat with Veterinarian') btn.textContent = langData.chatVet;
            if (text === 'Ask Fellow Farmers') btn.textContent = langData.askFarmers;
            if (text === 'Add Entry') btn.textContent = langData.addEntry;
            if (text === 'Export PDF') btn.textContent = langData.exportPDF;
            if (text === 'Share Report') btn.textContent = langData.shareReport;
            if (text === 'Set Temperature Reminder') btn.textContent = langData.setReminder;
            if (text === 'Learn More') btn.textContent = langData.learnMore;
            // Add more for filters, tabs, etc.
        });

        // Update upload sections
        document.querySelectorAll('.option h3').forEach(h3 => {
            const text = h3.textContent.trim();
            if (text === 'Upload Photo') h3.textContent = langData.uploadPhoto;
            if (text === 'Upload Video') h3.textContent = langData.uploadVideo;
            if (text === 'Voice Symptoms') h3.textContent = langData.voiceSymptoms;
        });

        document.querySelectorAll('.option p').forEach(p => {
            const text = p.textContent.trim();
            if (text.includes('Take a clear photo')) p.textContent = langData.takePhoto;
            if (text.includes('Record animal behavior')) p.textContent = langData.recordVideo;
            if (text.includes('Describe symptoms')) p.textContent = langData.describeSymptoms;
        });

        // Update diagnosis and recommendations
        document.querySelectorAll('.progress').forEach(p => {
            if (p.textContent.includes('Analyzing')) p.textContent = langData.analyzing;
        });

        document.querySelectorAll('.results p').forEach(p => {
            const text = p.textContent.trim();
            if (text.includes('Foot & Mouth Disease')) p.textContent = langData.possibleCause;
            if (text.includes('Nutritional Deficiency')) p.textContent = langData.nutritionalDef;
        });

        document.querySelectorAll('.steps h3, .recommendations h3').forEach(h3 => {
            if (h3.textContent.includes('Preventive Steps')) h3.textContent = langData.preventiveSteps;
            if (h3.textContent.includes('Recommendations')) h3.textContent = langData.recommendations;
        });

        document.querySelectorAll('.steps ul li, .tips ul li, .rec p').forEach(li => {
            const text = li.textContent.trim();
            if (text.includes('Isolate affected')) li.textContent = langData.isolate;
            if (text.includes('Disinfect feeding')) li.textContent = langData.disinfect;
            if (text.includes('Contact veterinarian')) li.textContent = langData.contactVet;
            if (text.includes('Monitor other animals')) li.textContent = langData.monitorAnimals;
            if (text.includes('Clean Water Tank')) li.textContent = langData.cleanWater;
            if (text.includes('Disinfect Shed')) li.textContent = langData.disinfectShed;
            if (text.includes('Pest Control')) li.textContent = langData.pestControl;
            if (text.includes('Good Practices')) li.textContent = langData.goodPractices;
            if (text.includes('Clean water sources daily')) li.textContent = langData.cleanWaterDaily;
            if (text.includes('Remove manure regularly')) li.textContent = langData.removeManure;
            if (text.includes('Disinfect tools after use')) li.textContent = langData.disinfectTools;
            if (text.includes('Monitor for pest signs')) li.textContent = langData.monitorPests;
            // Add more
        });

        // Update AI chat
        document.querySelectorAll('.chat-box .message').forEach(msg => {
            const text = msg.textContent.trim();
            if (text.includes('Hello! I\'m your farming buddy')) msg.textContent = langData.hello;
            if (text.includes('My cow seems sick')) msg.textContent = langData.cowSick;
            if (text.includes('I can help! Can you describe the symptoms')) msg.textContent = langData.askSymptoms;
        });

        // Update tip of the day
        document.querySelectorAll('.tips h3').forEach(h3 => {
            if (h3.textContent.includes('Tip of the Day')) h3.textContent = langData.tipDay;
            if (h3.textContent.includes('Temperature Monitoring')) h3.textContent = langData.tempMonitor;
        });

        document.querySelectorAll('.tips p').forEach(p => {
            if (p.textContent.includes('Check your livestock\'s body temperature')) p.textContent = langData.tempGuide;
        });

        document.querySelectorAll('.tips ul li').forEach(li => {
            const text = li.textContent.trim();
            if (text === 'Heat stress prevention') li.textContent = langData.heatStress;
            if (text === 'Fever treatment guide') li.textContent = langData.feverTreatment;
            if (text === 'Thermometer usage') li.textContent = langData.thermometer;
        });

        // Update map filters and alerts
        document.querySelectorAll('.filters button').forEach(btn => {
            const text = btn.textContent.trim();
            if (text === 'All') btn.textContent = langData.all;
            if (text === 'Animal') btn.textContent = langData.animal;
            if (text === 'Crop') btn.textContent = langData.crop;
            if (text === 'Climate') btn.textContent = langData.climate;
        });

        document.querySelectorAll('.alerts h3').forEach(h3 => {
            if (h3.textContent.includes('Recent Alerts')) h3.textContent = langData.recentAlerts;
        });

        document.querySelectorAll('.alert span').forEach(span => {
            const text = span.textContent.trim();
            if (text.includes('High Alert')) span.textContent = langData.highAlert;
            if (text.includes('Medium Alert')) span.textContent = langData.mediumAlert;
            if (text.includes('Weather Alert')) span.textContent = langData.weatherAlert;
            if (text.includes('All Clear')) span.textContent = langData.allClear;
        });

        // Update farm records tabs and entries
        document.querySelectorAll('.tabs button').forEach(btn => {
            const text = btn.textContent.trim();
            if (text === 'Vaccination') btn.textContent = langData.vaccination;
            if (text === 'Treatment') btn.textContent = langData.treatment;
            if (text === 'Sanitation') btn.textContent = langData.sanitation;
            if (text === 'Productivity') btn.textContent = langData.productivity;
        });

        document.querySelectorAll('.entry span:last-child').forEach(span => {
            const text = span.textContent.trim();
            if (text === 'Complete') span.textContent = langData.complete;
            if (text === 'Due Soon') span.textContent = langData.dueSoon;
            if (text === 'Ongoing') span.textContent = langData.ongoing;
            if (text === 'Below Target') span.textContent = langData.belowTarget;
        });

        // Update hygiene scanner
        document.querySelectorAll('.scan-area p').forEach(p => {
            const text = p.textContent.trim();
            if (text.includes('Scan Your Farm Area')) p.textContent = langData.scanArea;
            if (text.includes('Point camera at')) p.textContent = langData.pointCamera;
            if (text.includes('Current Hygiene Score')) p.textContent = langData.hygieneScore;
            if (text.includes('Good - Minor improvements needed')) p.textContent = langData.goodScore;
        });

        // Add similar updates for community page if needed
    }

    // Button interactions (unchanged)
    const buttons = document.querySelectorAll('button');
    buttons.forEach(button => {
        button.addEventListener('click', () => {
            if (button.textContent.includes('Upload') || button.textContent.includes('Record') || button.textContent.includes('Scan')) {
                console.log(`${button.textContent} initiated`);
                // Add file upload or camera logic
            } else if (button.textContent.includes('Chat') || button.textContent.includes('Send')) {
                console.log(`${button.textContent} initiated`);
                // Add chat logic
            } else if (button.textContent.includes('Export') || button.textContent.includes('Share')) {
                console.log(`${button.textContent} initiated`);
                // Add export/share logic
            } else {
                console.log(`${button.textContent} clicked`);
                // Add generic button logic
            }
        });
    });

    // Map filter buttons (unchanged)
    const filterButtons = document.querySelectorAll('.filters button');
    filterButtons.forEach(button => {
        button.addEventListener('click', () => {
            console.log(`Filter applied: ${button.textContent}`);
            // Add map filter logic
        });
    });

    // Tab functionality (unchanged)
    const tabButtons = document.querySelectorAll('.tabs button');
    tabButtons.forEach(button => {
        button.addEventListener('click', () => {
            console.log(`Tab switched to: ${button.textContent}`);
            // Add tab switching logic
        });
    });
});

// Map initialization with Leaflet (added)
if (document.getElementById('map')) {
    var map = L.map('map').setView([20.5937, 78.9629], 5); // Centered on India, zoom level 5

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // Example markers and risk areas (customize with real data)
    L.marker([20.5937, 78.9629]).addTo(map).bindPopup("Your Farm");
    L.circle([21.0, 79.0], {
        color: 'red',
        fillColor: '#f03',
        fillOpacity: 0.5,
        radius: 100000 // 100km radius
    }).addTo(map).bindPopup("High Risk: Foot & Mouth Disease");
    L.circle([20.0, 78.0], {
        color: 'yellow',
        fillColor: '#ff0',
        fillOpacity: 0.5,
        radius: 100000
    }).addTo(map).bindPopup("Medium Risk: Crop Blight");

    // Optional: Link filters to update map layers (example stub)
    const filterButtons = document.querySelectorAll('.filters button');
    filterButtons.forEach(button => {
        button.addEventListener('click', () => {
            console.log(`Filter applied: ${button.textContent}`);
            // Add logic to add/remove layers based on filter (e.g., animal vs crop)
        });
    });
}